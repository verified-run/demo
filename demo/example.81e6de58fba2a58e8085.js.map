{"version":3,"file":"example.81e6de58fba2a58e8085.js","mappings":"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","sources":["webpack://kycjs/./example/index.css","webpack://kycjs/./node_modules/@sentry/hub/src/session.ts","webpack://kycjs/./node_modules/@sentry/hub/src/hub.ts","webpack://kycjs/./node_modules/@sentry/hub/src/scope.ts","webpack://kycjs/./node_modules/@sentry/types/src/transaction.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/errors.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/hubextensions.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/idletransaction.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/span.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/spanstatus.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/transaction.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/utils.ts","webpack://kycjs/./node_modules/@sentry/types/src/session.ts","webpack://kycjs/./node_modules/@sentry/types/src/transport.ts","webpack://kycjs/./node_modules/@sentry/utils/src/browser.ts","webpack://kycjs/./node_modules/@sentry/utils/src/instrument.ts","webpack://kycjs/./node_modules/@sentry/utils/src/is.ts","webpack://kycjs/./node_modules/@sentry/utils/src/logger.ts","webpack://kycjs/./node_modules/@sentry/utils/src/misc.ts","webpack://kycjs/./node_modules/@sentry/utils/src/node.ts","webpack://kycjs/./node_modules/@sentry/utils/src/memo.ts","webpack://kycjs/./node_modules/@sentry/utils/src/object.ts","webpack://kycjs/./node_modules/@sentry/utils/src/stacktrace.ts","webpack://kycjs/./node_modules/@sentry/utils/src/string.ts","webpack://kycjs/./node_modules/@sentry/utils/src/supports.ts","webpack://kycjs/./node_modules/@sentry/utils/src/syncpromise.ts","webpack://kycjs/./node_modules/@sentry/utils/src/time.ts","webpack://kycjs/./node_modules/css-loader/dist/runtime/api.js","webpack://kycjs/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://kycjs/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://kycjs/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://kycjs/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://kycjs/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://kycjs/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://kycjs/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://kycjs/./node_modules/tslib/tslib.es6.js","webpack://kycjs/./example/index.css?888e","webpack://kycjs/./node_modules/@sentry/core/src/integrations/functiontostring.ts","webpack://kycjs/./node_modules/@sentry/core/src/integrations/inboundfilters.ts","webpack://kycjs/./node_modules/@sentry/core/src/version.ts","webpack://kycjs/./node_modules/@sentry/utils/src/polyfill.ts","webpack://kycjs/./node_modules/@sentry/utils/src/error.ts","webpack://kycjs/./node_modules/@sentry/utils/src/dsn.ts","webpack://kycjs/./node_modules/@sentry/core/src/integration.ts","webpack://kycjs/./node_modules/@sentry/core/src/baseclient.ts","webpack://kycjs/./node_modules/@sentry/types/src/status.ts","webpack://kycjs/./node_modules/@sentry/core/src/transports/noop.ts","webpack://kycjs/./node_modules/@sentry/types/src/severity.ts","webpack://kycjs/./node_modules/@sentry/core/src/basebackend.ts","webpack://kycjs/./node_modules/@sentry/browser/src/tracekit.ts","webpack://kycjs/./node_modules/@sentry/browser/src/parsers.ts","webpack://kycjs/./node_modules/@sentry/browser/src/eventbuilder.ts","webpack://kycjs/./node_modules/@sentry/core/src/request.ts","webpack://kycjs/./node_modules/@sentry/core/src/api.ts","webpack://kycjs/./node_modules/@sentry/utils/src/promisebuffer.ts","webpack://kycjs/./node_modules/@sentry/browser/src/transports/base.ts","webpack://kycjs/./node_modules/@sentry/browser/src/transports/fetch.ts","webpack://kycjs/./node_modules/@sentry/browser/src/transports/xhr.ts","webpack://kycjs/./node_modules/@sentry/browser/src/backend.ts","webpack://kycjs/./node_modules/@sentry/minimal/src/index.ts","webpack://kycjs/./node_modules/@sentry/browser/src/helpers.ts","webpack://kycjs/./node_modules/@sentry/browser/src/integrations/breadcrumbs.ts","webpack://kycjs/./node_modules/@sentry/browser/src/client.ts","webpack://kycjs/./node_modules/@sentry/browser/src/integrations/trycatch.ts","webpack://kycjs/./node_modules/@sentry/browser/src/integrations/globalhandlers.ts","webpack://kycjs/./node_modules/@sentry/browser/src/integrations/linkederrors.ts","webpack://kycjs/./node_modules/@sentry/browser/src/integrations/dedupe.ts","webpack://kycjs/./node_modules/@sentry/browser/src/integrations/useragent.ts","webpack://kycjs/./node_modules/@sentry/browser/src/sdk.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/backgroundtab.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/lib/bindReporter.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/lib/initMetric.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/lib/generateUniqueID.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/lib/observe.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/lib/onHidden.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/lib/getVisibilityWatcher.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/getLCP.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/metrics.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/getCLS.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/web-vitals/getFID.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/request.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/router.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/browser/browsertracing.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/integrations/node/express.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/integrations/node/postgres.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/integrations/node/mysql.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/integrations/node/mongo.ts","webpack://kycjs/./node_modules/@sentry/tracing/src/index.ts","webpack://kycjs/./node_modules/@sentry/core/src/sdk.ts","webpack://kycjs/./example/sentry.ts","webpack://kycjs/./example/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#kyc-container .active {\\n  background-color: #f00;\\n  color: #fff;\\n}\\ndiv#session-form {\\n  width: fit-content;\\n  background: #3498db;\\n  margin: auto;\\n  padding: 46vh 0;\\n  min-height: 5vh;\\n  color: white;\\n}\\nbody{\\n  background: #3498db;\\n}\\n#kyc-container {\\n  height: 80vh;\\n  max-width: 85vw;\\n  width: max-content;\\n  margin: auto;\\n  /* display: inline; */\\n  /* float: left; */\\n}\\n\\n.camera-stream {\\n  width: inherit;\\n  max-width: 85vw;\\n  height: inherit;\\n}\\n\\n.action-box {\\n  position: relative;\\n  bottom: 30px;\\n  text-align: center;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n#debug-canvas {\\n  width: max-content;\\n  display: inline;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n}\\n\\n.action-box {\\n  position: absolute;\\n  bottom: 30px;\\n  width: 100%;\\n}\\nli.verified {\\n  color: #0b957a;\\n}\\n#capture-progress {\\n  position: absolute;\\n  bottom: 0;\\n  height: 25px;\\n  width: 95%;\\n  right: 20px;\\n}\\n#jobs-list {\\n  position: absolute;\\n  top: 3rem;\\n  height: 4rem;\\n  right: 3rem;\\n  background: #ffffff60;\\n  border-radius: 5px;\\n}\\n#text-box {\\n  position: absolute;\\n  top: 10rem;\\n  height: 1.4rem;\\n  right: 3rem;\\n  background: #ffffff60;\\n  border-radius: 5px;\\n}\\nbutton{\\n  background: white;\\n  border-radius: 10px;\\n  border: none;\\n  padding: 5px;\\n}\\n\\n\\n\\n/* The Modal (background) */\\n.modal {\\n  display: none; /* Hidden by default */\\n  position: fixed; /* Stay in place */\\n  z-index: 1; /* Sit on top */\\n  padding-top: 50px; /* Location of the box */\\n  left: 0;\\n  top: 0;\\n  width: 100%; /* Full width */\\n  height: 100%; /* Full height */\\n  overflow: auto; /* Enable scroll if needed */\\n  background-color: rgb(0,0,0); /* Fallback color */\\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n}\\n\\n/* Modal Content */\\n#container {\\n  background-color: #fefefe;\\n  margin: auto;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  /* margin: 0 50px; */\\n  min-width: 55vw;\\n  width: max-content;\\n  height: max-content;\\n  position: relative;\\n}\\n\\n\\n.close:hover,\\n.close:focus {\\n  color: #000;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./example/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,sBAAsB;EACtB,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,YAAY;EACZ,eAAe;EACf,eAAe;EACf,YAAY;AACd;AACA;EACE,mBAAmB;AACrB;AACA;EACE,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,YAAY;EACZ,qBAAqB;EACrB,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,2BAA2B;EAC3B,yBAAyB;EACzB,wBAAwB;EACxB,sBAAsB;EACtB,qBAAqB;EACrB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,eAAe;EACf,MAAM;EACN,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;AACb;AACA;EACE,cAAc;AAChB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,YAAY;EACZ,UAAU;EACV,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,YAAY;EACZ,WAAW;EACX,qBAAqB;EACrB,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,cAAc;EACd,WAAW;EACX,qBAAqB;EACrB,kBAAkB;AACpB;AACA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,YAAY;AACd;;;;AAIA,2BAA2B;AAC3B;EACE,aAAa,EAAE,sBAAsB;EACrC,eAAe,EAAE,kBAAkB;EACnC,UAAU,EAAE,eAAe;EAC3B,iBAAiB,EAAE,wBAAwB;EAC3C,OAAO;EACP,MAAM;EACN,WAAW,EAAE,eAAe;EAC5B,YAAY,EAAE,gBAAgB;EAC9B,cAAc,EAAE,4BAA4B;EAC5C,4BAA4B,EAAE,mBAAmB;EACjD,iCAAiC,EAAE,qBAAqB;AAC1D;;AAEA,kBAAkB;AAClB;EACE,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,oBAAoB;EACpB,eAAe;EACf,kBAAkB;EAClB,mBAAmB;EACnB,kBAAkB;AACpB;;;AAGA;;EAEE,WAAW;EACX,qBAAqB;EACrB,eAAe;AACjB\",\"sourcesContent\":[\"#kyc-container .active {\\n  background-color: #f00;\\n  color: #fff;\\n}\\ndiv#session-form {\\n  width: fit-content;\\n  background: #3498db;\\n  margin: auto;\\n  padding: 46vh 0;\\n  min-height: 5vh;\\n  color: white;\\n}\\nbody{\\n  background: #3498db;\\n}\\n#kyc-container {\\n  height: 80vh;\\n  max-width: 85vw;\\n  width: max-content;\\n  margin: auto;\\n  /* display: inline; */\\n  /* float: left; */\\n}\\n\\n.camera-stream {\\n  width: inherit;\\n  max-width: 85vw;\\n  height: inherit;\\n}\\n\\n.action-box {\\n  position: relative;\\n  bottom: 30px;\\n  text-align: center;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n#debug-canvas {\\n  width: max-content;\\n  display: inline;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n}\\n\\n.action-box {\\n  position: absolute;\\n  bottom: 30px;\\n  width: 100%;\\n}\\nli.verified {\\n  color: #0b957a;\\n}\\n#capture-progress {\\n  position: absolute;\\n  bottom: 0;\\n  height: 25px;\\n  width: 95%;\\n  right: 20px;\\n}\\n#jobs-list {\\n  position: absolute;\\n  top: 3rem;\\n  height: 4rem;\\n  right: 3rem;\\n  background: #ffffff60;\\n  border-radius: 5px;\\n}\\n#text-box {\\n  position: absolute;\\n  top: 10rem;\\n  height: 1.4rem;\\n  right: 3rem;\\n  background: #ffffff60;\\n  border-radius: 5px;\\n}\\nbutton{\\n  background: white;\\n  border-radius: 10px;\\n  border: none;\\n  padding: 5px;\\n}\\n\\n\\n\\n/* The Modal (background) */\\n.modal {\\n  display: none; /* Hidden by default */\\n  position: fixed; /* Stay in place */\\n  z-index: 1; /* Sit on top */\\n  padding-top: 50px; /* Location of the box */\\n  left: 0;\\n  top: 0;\\n  width: 100%; /* Full width */\\n  height: 100%; /* Full height */\\n  overflow: auto; /* Enable scroll if needed */\\n  background-color: rgb(0,0,0); /* Fallback color */\\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n}\\n\\n/* Modal Content */\\n#container {\\n  background-color: #fefefe;\\n  margin: auto;\\n  padding: 20px;\\n  border: 1px solid #888;\\n  /* margin: 0 50px; */\\n  min-width: 55vw;\\n  width: max-content;\\n  height: max-content;\\n  position: relative;\\n}\\n\\n\\n.close:hover,\\n.close:focus {\\n  color: #000;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { Session as SessionInterface, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n\n/**\n * @inheritdoc\n */\nexport class Session implements SessionInterface {\n  public userAgent?: string;\n  public errors: number = 0;\n  public release?: string;\n  public sid: string = uuid4();\n  public did?: string;\n  public timestamp: number;\n  public started: number;\n  public duration?: number = 0;\n  public status: SessionStatus = SessionStatus.Ok;\n  public environment?: string;\n  public ipAddress?: string;\n  public init: boolean = true;\n  public ignoreDuration: boolean = false;\n\n  public constructor(context?: Omit<SessionContext, 'started' | 'status'>) {\n    // Both timestamp and started are in seconds since the UNIX epoch.\n    const startingTime = timestampInSeconds();\n    this.timestamp = startingTime;\n    this.started = startingTime;\n    if (context) {\n      this.update(context);\n    }\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  public update(context: SessionContext = {}): void {\n    if (context.user) {\n      if (!this.ipAddress && context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!this.did && !context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || timestampInSeconds();\n    if (context.ignoreDuration) {\n      this.ignoreDuration = context.ignoreDuration;\n    }\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.init !== undefined) {\n      this.init = context.init;\n    }\n    if (!this.did && context.did) {\n      this.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (this.ignoreDuration) {\n      this.duration = undefined;\n    } else if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      const duration = this.timestamp - this.started;\n      this.duration = duration >= 0 ? duration : 0;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (!this.ipAddress && context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (!this.userAgent && context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  }\n\n  /** JSDoc */\n  public close(status?: Exclude<SessionStatus, SessionStatus.Ok>): void {\n    if (status) {\n      this.update({ status });\n    } else if (this.status === SessionStatus.Ok) {\n      this.update({ status: SessionStatus.Exited });\n    } else {\n      this.update();\n    }\n  }\n\n  /** JSDoc */\n  public toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration?: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  } {\n    return dropUndefinedKeys({\n      sid: `${this.sid}`,\n      init: this.init,\n      // Make sure that sec is converted to ms for date constructor\n      started: new Date(this.started * 1000).toISOString(),\n      timestamp: new Date(this.timestamp * 1000).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? `${this.did}` : undefined,\n      duration: this.duration,\n      attrs: dropUndefinedKeys({\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent,\n      }),\n    });\n  }\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  SessionContext,\n  SessionStatus,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope?: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    hub?: Hub;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Hack to prevent bundlers from breaking our usage of the domain package in the cross-platform Hub package */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      domain?: { [key: string]: any };\n    } & {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @hidden\n * @deprecated Can be removed once `Hub.getActiveDomain` is removed.\n */\nexport interface DomainAsCarrier extends Carrier {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  members: { [key: string]: any }[];\n}\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimic the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimic the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    this.getStackTop()\n      ?.scope?.getSession()\n      ?.close();\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    this.getStackTop()?.scope?.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const global = getGlobalObject<{ navigator?: { userAgent?: string } }>();\n    const { userAgent } = global.navigator || {};\n\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === SessionStatus.Ok) {\n        currentSession.update({ status: SessionStatus.Exited });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const activeDomain = getMainCarrier().__SENTRY__?.extensions?.domain?.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Severity,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, getGlobalObject, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n\nimport { Session } from './session';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive } = {};\n\n  /** Extra */\n  protected _extra: Extras = {};\n\n  /** Contexts */\n  protected _contexts: Contexts = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      this._session.update({ user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Can be removed in major version.\n   * @deprecated in favor of {@link this.setTransactionName}\n   */\n  public setTransaction(name?: string): this {\n    return this.setTransactionName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // often, this span will be a transaction, but it's not guaranteed to be\n    const span = this.getSpan() as undefined | (Span & { spanRecorder: { spans: Span[] } });\n\n    // try it the new way first\n    if (span?.transaction) {\n      return span?.transaction;\n    }\n\n    // fallback to the old way (known bug: this only finds transactions with sampled = true)\n    if (span?.spanRecorder?.spans[0]) {\n      return span.spanRecorder.spans[0] as Transaction;\n    }\n\n    // neither way found a transaction\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional information about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction?.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          void (result as PromiseLike<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access  */\n  const global = getGlobalObject<any>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","import { ExtractedNodeRequestData, Primitive, WorkerLocation } from './misc';\nimport { Span, SpanContext } from './span';\n\n/**\n * Interface holding Transaction-specific properties\n */\nexport interface TransactionContext extends SpanContext {\n  /**\n   * Human-readable identifier for the transaction\n   */\n  name: string;\n\n  /**\n   * If true, sets the end timestamp of the transaction to the highest timestamp of child spans, trimming\n   * the duration of the transaction. This is useful to discard extra time in the transaction that is not\n   * accounted for in child spans, like what happens in the idle transaction Tracing integration, where we finish the\n   * transaction after a given \"idle time\" and we don't want this \"idle time\" to be part of the transaction.\n   */\n  trimEnd?: boolean;\n\n  /**\n   * If this transaction has a parent, the parent's sampling decision\n   */\n  parentSampled?: boolean;\n\n  /**\n   * Metadata associated with the transaction, for internal SDK use.\n   */\n  metadata?: TransactionMetadata;\n}\n\n/**\n * Data pulled from a `sentry-trace` header\n */\nexport type TraceparentData = Pick<TransactionContext, 'traceId' | 'parentSpanId' | 'parentSampled'>;\n\n/**\n * Transaction \"Class\", inherits Span only has `setName`\n */\nexport interface Transaction extends TransactionContext, Span {\n  /**\n   * @inheritDoc\n   */\n  spanId: string;\n\n  /**\n   * @inheritDoc\n   */\n  traceId: string;\n\n  /**\n   * @inheritDoc\n   */\n  startTimestamp: number;\n\n  /**\n   * @inheritDoc\n   */\n  tags: { [key: string]: Primitive };\n\n  /**\n   * @inheritDoc\n   */\n  data: { [key: string]: any };\n\n  /**\n   * Metadata about the transaction\n   */\n  metadata: TransactionMetadata;\n\n  /**\n   * Set the name of the transaction\n   */\n  setName(name: string): void;\n\n  /** Returns the current transaction properties as a `TransactionContext` */\n  toContext(): TransactionContext;\n\n  /** Updates the current transaction with a new `TransactionContext` */\n  updateWithContext(transactionContext: TransactionContext): this;\n}\n\n/**\n * Context data passed by the user when starting a transaction, to be used by the tracesSampler method.\n */\nexport interface CustomSamplingContext {\n  [key: string]: any;\n}\n\n/**\n * Data passed to the `tracesSampler` function, which forms the basis for whatever decisions it might make.\n *\n * Adds default data to data provided by the user. See {@link Hub.startTransaction}\n */\nexport interface SamplingContext extends CustomSamplingContext {\n  /**\n   * Context data with which transaction being sampled was created\n   */\n  transactionContext: TransactionContext;\n\n  /**\n   * Sampling decision from the parent transaction, if any.\n   */\n  parentSampled?: boolean;\n\n  /**\n   * Object representing the URL of the current page or worker script. Passed by default when using the `BrowserTracing`\n   * integration.\n   */\n  location?: WorkerLocation;\n\n  /**\n   * Object representing the incoming request to a node server. Passed by default when using the TracingHandler.\n   */\n  request?: ExtractedNodeRequestData;\n}\n\nexport type Measurements = Record<string, { value: number }>;\n\nexport enum TransactionSamplingMethod {\n  Explicit = 'explicitly_set',\n  Sampler = 'client_sampler',\n  Rate = 'client_rate',\n  Inheritance = 'inheritance',\n}\n\nexport interface TransactionMetadata {\n  transactionSampling?: { rate?: number; method?: string };\n\n  /** The two halves (sentry and third-party) of a transaction's tracestate header, used for dynamic sampling */\n  tracestate?: {\n    sentry?: string;\n    thirdparty?: string;\n  };\n\n  /** For transactions tracing server-side request handling, the path of the request being tracked. */\n  requestPath?: string;\n}\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { SpanStatus } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  addInstrumentationHandler({\n    callback: errorCallback,\n    type: 'error',\n  });\n  addInstrumentationHandler({\n    callback: errorCallback,\n    type: 'unhandledrejection',\n  });\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    logger.log(`[Tracing] Transaction: ${SpanStatus.InternalError} -> Global error occured`);\n    activeTransaction.setStatus(SpanStatus.InternalError);\n  }\n}\n","import { getMainCarrier, Hub } from '@sentry/hub';\nimport {\n  CustomSamplingContext,\n  Integration,\n  IntegrationClass,\n  Options,\n  SamplingContext,\n  TransactionContext,\n  TransactionSamplingMethod,\n} from '@sentry/types';\nimport { dynamicRequire, isNodeEnv, loadModule, logger } from '@sentry/utils';\n\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { Transaction } from './transaction';\nimport { hasTracingEnabled } from './utils';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders(this: Hub): { [key: string]: string } {\n  const scope = this.getScope();\n  if (scope) {\n    const span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param hub: The hub off of which to read config options\n * @param transaction: The transaction needing a sampling decision\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample<T extends Transaction>(transaction: T, options: Options, samplingContext: SamplingContext): T {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled()) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      transactionSampling: { method: TransactionSamplingMethod.Explicit },\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      transactionSampling: {\n        method: TransactionSamplingMethod.Sampler,\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n    transaction.setMetadata({\n      transactionSampling: { method: TransactionSamplingMethod.Inheritance },\n    });\n  } else {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      transactionSampling: {\n        method: TransactionSamplingMethod.Rate,\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    logger.warn(`[Tracing] Discarding transaction because of invalid sample rate.`);\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    logger.log(\n      `[Tracing] Discarding transaction because ${\n        typeof options.tracesSampler === 'function'\n          ? 'tracesSampler returned 0 or false'\n          : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n      }`,\n    );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate as number | boolean);\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    logger.log(\n      `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n        sampleRate,\n      )})`,\n    );\n    return transaction;\n  }\n\n  logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate as any) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    logger.warn(\n      `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n        rate,\n      )} of type ${JSON.stringify(typeof rate)}.`,\n    );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  this: Hub,\n  transactionContext: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  const options = this.getClient()?.getOptions() || {};\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments?.maxSpans as number);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(\n  hub: Hub,\n  transactionContext: TransactionContext,\n  idleTimeout?: number,\n  onScope?: boolean,\n  customSamplingContext?: CustomSamplingContext,\n): IdleTransaction {\n  const options = hub.getClient()?.getOptions() || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments?.maxSpans as number);\n  }\n  return transaction;\n}\n\n/**\n * @private\n */\nexport function _addTracingExtensions(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  const packageToIntegrationMapping: Record<string, () => Integration> = {\n    mongodb() {\n      const integration = dynamicRequire(module, './integrations/mongo') as { Mongo: IntegrationClass<Integration> };\n      return new integration.Mongo();\n    },\n    mongoose() {\n      const integration = dynamicRequire(module, './integrations/mongo') as { Mongo: IntegrationClass<Integration> };\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      const integration = dynamicRequire(module, './integrations/mysql') as { Mysql: IntegrationClass<Integration> };\n      return new integration.Mysql();\n    },\n    pg() {\n      const integration = dynamicRequire(module, './integrations/postgres') as {\n        Postgres: IntegrationClass<Integration>;\n      };\n      return new integration.Postgres();\n    },\n  };\n\n  const mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) as Integration[];\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nexport function addExtensionMethods(): void {\n  _addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  registerErrorInstrumentation();\n}\n","import { Hub } from '@sentry/hub';\nimport { TransactionContext } from '@sentry/types';\nimport { logger, timestampWithMs } from '@sentry/utils';\n\nimport { Span, SpanRecorder } from './span';\nimport { SpanStatus } from './spanstatus';\nimport { Transaction } from './transaction';\n\nexport const DEFAULT_IDLE_TIMEOUT = 1000;\nexport const HEARTBEAT_INTERVAL = 5000;\n\n/**\n * @inheritDoc\n */\nexport class IdleTransactionSpanRecorder extends SpanRecorder {\n  public constructor(\n    private readonly _pushActivity: (id: string) => void,\n    private readonly _popActivity: (id: string) => void,\n    public transactionSpanId: string = '',\n    maxlen?: number,\n  ) {\n    super(maxlen);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(span: Span): void {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp?: number) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\nexport type BeforeFinishCallback = (transactionSpan: IdleTransaction, endTimestamp: number) => void;\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nexport class IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n  public activities: Record<string, boolean> = {};\n\n  // Track state of activities in previous heartbeat\n  private _prevHeartbeatString: string | undefined;\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n  private _heartbeatCounter: number = 0;\n\n  // We should not use heartbeat if we finished a transaction\n  private _finished: boolean = false;\n\n  private readonly _beforeFinishCallbacks: BeforeFinishCallback[] = [];\n\n  /**\n   * If a transaction is created and no activities are added, we want to make sure that\n   * it times out properly. This is cleared and not used when activities are added.\n   */\n  private _initTimeout: ReturnType<typeof setTimeout> | undefined;\n\n  public constructor(\n    transactionContext: TransactionContext,\n    private readonly _idleHub?: Hub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished.\n     * @default 1000\n     */\n    private readonly _idleTimeout: number = DEFAULT_IDLE_TIMEOUT,\n    // If an idle transaction should be put itself on and off the scope automatically.\n    private readonly _onScope: boolean = false,\n  ) {\n    super(transactionContext, _idleHub);\n\n    if (_idleHub && _onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._initTimeout = setTimeout(() => {\n      if (!this._finished) {\n        this.finish();\n      }\n    }, this._idleTimeout);\n  }\n\n  /** {@inheritDoc} */\n  public finish(endTimestamp: number = timestampWithMs()): string | undefined {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span: Span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus(SpanStatus.Cancelled);\n          logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          logger.log(\n            '[Tracing] discarding Span since it happened after Transaction was finished',\n            JSON.stringify(span, undefined, 2),\n          );\n        }\n        return keepSpan;\n      });\n\n      logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // this._onScope is true if the transaction was previously on the scope.\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n  public registerBeforeFinishCallback(callback: BeforeFinishCallback): void {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public initSpanRecorder(maxlen?: number): void {\n    if (!this.spanRecorder) {\n      const pushActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  private _pushActivity(spanId: string): void {\n    if (this._initTimeout) {\n      clearTimeout(this._initTimeout);\n      this._initTimeout = undefined;\n    }\n    logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  private _popActivity(spanId: string): void {\n    if (this.activities[spanId]) {\n      logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const timeout = this._idleTimeout;\n      // We need to add the timeout here to have the real endtimestamp of the transaction\n      // Remember timestampWithMs is in seconds, timeout is in ms\n      const end = timestampWithMs() + timeout / 1000;\n\n      setTimeout(() => {\n        if (!this._finished) {\n          this.finish(end);\n        }\n      }, timeout);\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n  private _beat(): void {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter += 1;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      logger.log(`[Tracing] Transaction finished because of no change for 3 heart beats`);\n      this.setStatus(SpanStatus.DeadlineExceeded);\n      this.setTag('heartbeat', 'failed');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n  private _pingHeartbeat(): void {\n    logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, HEARTBEAT_INTERVAL);\n  }\n}\n\n/**\n * Reset active transaction on scope\n */\nfunction clearActiveTransaction(hub?: Hub): void {\n  if (hub) {\n    const scope = hub.getScope();\n    if (scope) {\n      const transaction = scope.getTransaction();\n      if (transaction) {\n        scope.setSpan(undefined);\n      }\n    }\n  }\n}\n","/* eslint-disable max-lines */\nimport { Primitive, Span as SpanInterface, SpanContext, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys, timestampWithMs, uuid4 } from '@sentry/utils';\n\nimport { SpanStatus } from './spanstatus';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[] = [];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * @inheritDoc\n   */\n  public traceId: string = uuid4();\n\n  /**\n   * @inheritDoc\n   */\n  public spanId: string = uuid4().substring(16);\n\n  /**\n   * @inheritDoc\n   */\n  public parentSpanId?: string;\n\n  /**\n   * Internal keeper of the status\n   */\n  public status?: SpanStatus | string;\n\n  /**\n   * @inheritDoc\n   */\n  public sampled?: boolean;\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n  public startTimestamp: number = timestampWithMs();\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  public endTimestamp?: number;\n\n  /**\n   * @inheritDoc\n   */\n  public op?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public description?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public tags: { [key: string]: Primitive } = {};\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any } = {};\n\n  /**\n   * List of spans that were finalized\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   */\n  public transaction?: Transaction;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext?: SpanContext) {\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated\n   */\n  public child(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'spanId' | 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    return this.startChild(spanContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'spanId' | 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public setData(key: string, value: any): this {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatus): this {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setHttpStatus(httpStatus: number): this {\n    this.setTag('http.status_code', String(httpStatus));\n    const spanStatus = SpanStatus.fromHttpCode(httpStatus);\n    if (spanStatus !== SpanStatus.UnknownError) {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isSuccess(): boolean {\n    return this.status === SpanStatus.Ok;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): void {\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): SpanContext {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(spanContext: SpanContext): this {\n    this.data = spanContext.data ?? {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId ?? this.spanId;\n    this.startTimestamp = spanContext.startTimestamp ?? this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags ?? {};\n    this.traceId = spanContext.traceId ?? this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTraceContext(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    trace_id: string;\n  } {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    start_timestamp: number;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    timestamp?: number;\n    trace_id: string;\n  } {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n","/** The status of an Span. */\n// eslint-disable-next-line import/export\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace SpanStatus {\n  /**\n   * Converts a HTTP status code into a {@link SpanStatus}.\n   *\n   * @param httpStatus The HTTP response status code.\n   * @returns The span status or {@link SpanStatus.UnknownError}.\n   */\n  export function fromHttpCode(httpStatus: number): SpanStatus {\n    if (httpStatus < 400) {\n      return SpanStatus.Ok;\n    }\n\n    if (httpStatus >= 400 && httpStatus < 500) {\n      switch (httpStatus) {\n        case 401:\n          return SpanStatus.Unauthenticated;\n        case 403:\n          return SpanStatus.PermissionDenied;\n        case 404:\n          return SpanStatus.NotFound;\n        case 409:\n          return SpanStatus.AlreadyExists;\n        case 413:\n          return SpanStatus.FailedPrecondition;\n        case 429:\n          return SpanStatus.ResourceExhausted;\n        default:\n          return SpanStatus.InvalidArgument;\n      }\n    }\n\n    if (httpStatus >= 500 && httpStatus < 600) {\n      switch (httpStatus) {\n        case 501:\n          return SpanStatus.Unimplemented;\n        case 503:\n          return SpanStatus.Unavailable;\n        case 504:\n          return SpanStatus.DeadlineExceeded;\n        default:\n          return SpanStatus.InternalError;\n      }\n    }\n\n    return SpanStatus.UnknownError;\n  }\n}\n","import { getCurrentHub, Hub } from '@sentry/hub';\nimport {\n  Event,\n  Measurements,\n  Outcome,\n  Transaction as TransactionInterface,\n  TransactionContext,\n  TransactionMetadata,\n} from '@sentry/types';\nimport { dropUndefinedKeys, isInstanceOf, logger } from '@sentry/utils';\n\nimport { Span as SpanClass, SpanRecorder } from './span';\n\n/** JSDoc */\nexport class Transaction extends SpanClass implements TransactionInterface {\n  public name: string;\n\n  public metadata: TransactionMetadata;\n\n  private _measurements: Measurements = {};\n\n  /**\n   * The reference to the current hub.\n   */\n  private readonly _hub: Hub = (getCurrentHub() as unknown) as Hub;\n\n  private _trimEnd?: boolean;\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(transactionContext: TransactionContext, hub?: Hub) {\n    super(transactionContext);\n\n    if (isInstanceOf(hub, Hub)) {\n      this._hub = hub as Hub;\n    }\n\n    this.name = transactionContext.name || '';\n\n    this.metadata = transactionContext.metadata || {};\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n  }\n\n  /**\n   * JSDoc\n   */\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n  public initSpanRecorder(maxlen: number = 1000): void {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set observed measurements for this transaction.\n   * @hidden\n   */\n  public setMeasurements(measurements: Measurements): void {\n    this._measurements = { ...measurements };\n  }\n\n  /**\n   * Set metadata for this transaction.\n   * @hidden\n   */\n  public setMetadata(newMetadata: TransactionMetadata): void {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public finish(endTimestamp?: number): string | undefined {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      this._hub\n        .getClient()\n        ?.getTransport()\n        .recordLostEvent?.(Outcome.SampleRate, 'transaction');\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev: SpanClass, current: SpanClass) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const transaction: Event = {\n      contexts: {\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      debug_meta: this.metadata,\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      logger.log('[Measurements] Adding measurements to transaction', JSON.stringify(this._measurements, undefined, 2));\n      transaction.measurements = this._measurements;\n    }\n\n    logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): TransactionContext {\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(transactionContext: TransactionContext): this {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name ?? '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n}\n","import { getCurrentHub, Hub } from '@sentry/hub';\nimport { Options, TraceparentData, Transaction } from '@sentry/types';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n  '([0-9a-f]{32})?' + // trace_id\n  '-?([0-9a-f]{16})?' + // span_id\n  '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(\n  options: Options | undefined = getCurrentHub()\n    .getClient()\n    ?.getOptions(),\n): boolean {\n  if (!options) {\n    return false;\n  }\n  return 'tracesSampleRate' in options || 'tracesSampler' in options;\n}\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent: string): TraceparentData | undefined {\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    let parentSampled: boolean | undefined;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled,\n      parentSpanId: matches[2],\n    };\n  }\n  return undefined;\n}\n\n/** Grabs active transaction off scope, if any */\nexport function getActiveTransaction<T extends Transaction>(hub: Hub = getCurrentHub()): T | undefined {\n  return hub?.getScope()?.getTransaction() as T | undefined;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nexport function msToSec(time: number): number {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nexport function secToMs(time: number): number {\n  return time * 1000;\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n","import { User } from './user';\n\n/**\n * @inheritdoc\n */\nexport interface Session extends SessionContext {\n  /** JSDoc */\n  update(context?: SessionContext): void;\n\n  /** JSDoc */\n  close(status?: SessionStatus): void;\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration?: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  };\n}\n\nexport interface RequestSession {\n  status?: RequestSessionStatus;\n}\n\n/**\n * Session Context\n */\nexport interface SessionContext {\n  sid?: string;\n  did?: string;\n  init?: boolean;\n  // seconds since the UNIX epoch\n  timestamp?: number;\n  // seconds since the UNIX epoch\n  started?: number;\n  duration?: number;\n  status?: SessionStatus;\n  release?: string;\n  environment?: string;\n  userAgent?: string;\n  ipAddress?: string;\n  errors?: number;\n  user?: User | null;\n  ignoreDuration?: boolean;\n}\n\n/**\n * Session Status\n */\nexport enum SessionStatus {\n  /** JSDoc */\n  Ok = 'ok',\n  /** JSDoc */\n  Exited = 'exited',\n  /** JSDoc */\n  Crashed = 'crashed',\n  /** JSDoc */\n  Abnormal = 'abnormal',\n}\n\nexport enum RequestSessionStatus {\n  /** JSDoc */\n  Ok = 'ok',\n  /** JSDoc */\n  Errored = 'errored',\n  /** JSDoc */\n  Crashed = 'crashed',\n}\n\n/** JSDoc */\nexport interface SessionAggregates {\n  attrs?: {\n    environment?: string;\n    release?: string;\n  };\n  aggregates: Array<AggregationCounts>;\n}\n\nexport interface SessionFlusherLike {\n  /**\n   * Increments the Session Status bucket in SessionAggregates Object corresponding to the status of the session\n   * captured\n   */\n  incrementSessionStatusCount(): void;\n\n  /** Submits the aggregates request mode sessions to Sentry */\n  sendSessionAggregates(sessionAggregates: SessionAggregates): void;\n\n  /** Empties Aggregate Buckets and Sends them to Transport Buffer */\n  flush(): void;\n\n  /** Clears setInterval and calls flush */\n  close(): void;\n}\n\nexport interface AggregationCounts {\n  started: string;\n  errored?: number;\n  exited?: number;\n  crashed?: number;\n}\n","import { DsnLike } from './dsn';\nimport { Event } from './event';\nimport { SentryRequestType } from './request';\nimport { Response } from './response';\nimport { SdkMetadata } from './sdkmetadata';\nimport { Session, SessionAggregates } from './session';\n\nexport enum Outcome {\n  BeforeSend = 'before_send',\n  EventProcessor = 'event_processor',\n  NetworkError = 'network_error',\n  QueueOverflow = 'queue_overflow',\n  RateLimitBackoff = 'ratelimit_backoff',\n  SampleRate = 'sample_rate',\n}\n\n/** Transport used sending data to Sentry */\nexport interface Transport {\n  /**\n   * Sends the event to the Store endpoint in Sentry.\n   *\n   * @param event Event that should be sent to Sentry.\n   */\n  sendEvent(event: Event): PromiseLike<Response>;\n\n  /**\n   * Sends the session to the Envelope endpoint in Sentry.\n   *\n   * @param session Session that should be sent to Sentry | Session Aggregates that should be sent to Sentry.\n   */\n  sendSession?(session: Session | SessionAggregates): PromiseLike<Response>;\n\n  /**\n   * Wait for all events to be sent or the timeout to expire, whichever comes first.\n   *\n   * @param timeout Maximum time in ms the transport should wait for events to be flushed. Omitting this parameter will\n   *   cause the transport to wait until all events are sent before resolving the promise.\n   * @returns A promise that will resolve with `true` if all events are sent before the timeout, or `false` if there are\n   * still events in the queue when the timeout is reached.\n   */\n  close(timeout?: number): PromiseLike<boolean>;\n\n  /**\n   * Increment the counter for the specific client outcome\n   */\n  recordLostEvent?(type: Outcome, category: SentryRequestType): void;\n}\n\n/** JSDoc */\nexport type TransportClass<T extends Transport> = new (options: TransportOptions) => T;\n\n/** JSDoc */\nexport interface TransportOptions {\n  /** Sentry DSN */\n  dsn: DsnLike;\n  /** Define custom headers */\n  headers?: { [key: string]: string };\n  /** Set a HTTP proxy that should be used for outbound requests. */\n  httpProxy?: string;\n  /** Set a HTTPS proxy that should be used for outbound requests. */\n  httpsProxy?: string;\n  /** HTTPS proxy certificates path */\n  caCerts?: string;\n  /** Fetch API init parameters */\n  fetchParameters?: { [key: string]: string };\n  /** The envelope tunnel to use. */\n  tunnel?: string;\n  /** Send SDK Client Reports. Enabled by default. */\n  sendClientReports?: boolean;\n  /**\n   * Set of metadata about the SDK that can be internally used to enhance envelopes and events,\n   * and provide additional data about every request.\n   * */\n  _metadata?: SdkMetadata;\n}\n","import { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown, keyAttrs?: string[]): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs = keyAttrs?.length\n    ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n    : null;\n\n  if (keyAttrPairs?.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\n/** Object describing handler that will be triggered for a given `type` of instrumentation */\ninterface InstrumentHandler {\n  type: InstrumentHandlerType;\n  callback: InstrumentHandlerCallback;\n}\ntype InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\ntype InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      logger.warn('unknown instrumentation type:', type);\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler: InstrumentHandler): void {\n  if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n    return;\n  }\n  handlers[handler.type] = handlers[handler.type] || [];\n  (handlers[handler.type] as InstrumentHandlerCallback[]).push(handler.callback);\n  instrument(handler.type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      logger.error(\n        `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(\n          handler,\n        )}\\nError: ${e}`,\n      );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function(originalConsoleLevel: () => any): Function {\n      return function(...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n          Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function(originalFetch: () => void): () => void {\n    return function(...args: any[]): void {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  // Poor man's implementation of ES6 `Map`, tracking and keeping in sync key and value separately.\n  const requestKeys: XMLHttpRequest[] = [];\n  const requestValues: Array<any>[] = [];\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function(originalOpen: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function(): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            if (xhr.__sentry_xhr__) {\n              xhr.__sentry_xhr__.status_code = xhr.status;\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          try {\n            const requestPos = requestKeys.indexOf(xhr);\n            if (requestPos !== -1) {\n              // Make sure to pop both key and value to keep it in sync.\n              requestKeys.splice(requestPos);\n              const args = requestValues.splice(requestPos)[0];\n              if (xhr.__sentry_xhr__ && args[0] !== undefined) {\n                xhr.__sentry_xhr__.body = args[0] as XHRSendInput;\n              }\n            }\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function(original: WrappedFunction): Function {\n          return function(...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function(originalSend: () => void): () => void {\n    return function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      requestKeys.push(this);\n      requestValues.push(args);\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function(this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function(this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(originalAddEventListener: AddEventListener): AddEventListener {\n      return function(\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n      return function(\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = el.__sentry_instrumentation_handlers__ || {};\n            const handlerForType = handlers[type];\n\n            if (handlerForType) {\n              handlerForType.refCount -= 1;\n              // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n              if (handlerForType.refCount <= 0) {\n                originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                handlerForType.handler = undefined;\n                delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n              }\n\n              // If there are no longer any custom handlers of any type on this element, cleanup everything.\n              if (Object.keys(handlers).length === 0) {\n                delete el.__sentry_instrumentation_handlers__;\n              }\n            }\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalRemoveEventListener.call(this, type, listener, options);\n      };\n    });\n  });\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function(msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function(e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n    ? window // eslint-disable-line no-restricted-globals\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  const global = getGlobalObject<Window>();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n","/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName } from './stacktrace';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      [key: string]: any;\n      stack: string | undefined;\n      message: string;\n      name: string;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    // Accessing event attributes can throw (see https://github.com/getsentry/sentry-javascript/issues/768 and\n    // https://github.com/getsentry/sentry-javascript/issues/838), but accessing `type` hasn't been wrapped in a\n    // try-catch in at least two years and no one's complained, so that's likely not an issue anymore\n    source.type = event.type;\n\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      source.detail = event.detail;\n    }\n\n    for (const attr in event) {\n      if (Object.prototype.hasOwnProperty.call(event, attr)) {\n        source[attr] = event[attr];\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/**\n * Transform any non-primitive, BigInt, or Symbol-type value into a string. Acts as a no-op on strings, numbers,\n * booleans, null, and undefined.\n *\n * @param value The value to stringify\n * @returns For non-primitive, BigInt, and Symbol-type values, a string denoting the value's type, type and value, or\n *  type and `description` property, respectively. For non-BigInt, non-Symbol primitives, returns the original value,\n *  unchanged.\n */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  // It's safe to use `window` and `document` here in this manner, as we are asserting using `typeof` first\n  // which won't throw if they are not present.\n\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${getFunctionName(value)}]`;\n  }\n\n  // symbols and bigints are considered primitives by TS, but aren't natively JSON-serilaizable\n\n  if (typeof value === 'symbol') {\n    return `[${String(value)}]`;\n  }\n\n  if (typeof value === 'bigint') {\n    return `[BigInt: ${String(value)}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // If value implements `toJSON` method, call it and return early\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input: any, depth?: number): any {\n  try {\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const obj = val as { [key: string]: any };\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(obj)) {\n      if (typeof obj[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(obj[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n","const defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n","import { isRegExp, isString } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    // eslint-disable-next-line no-param-reassign\n    colno = ll;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === `function`) {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        void SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import { getGlobalObject } from './misc';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds: () => number = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds: () => number = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var _i = 0; _i < this.length; _i++) {\n        var id = this[_i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i2 = 0; _i2 < modules.length; _i2++) {\n      var item = [].concat(modules[_i2]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry_original__ || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration, StackFrame } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n\n  /** @deprecated use {@link InboundFiltersOptions.allowUrls} instead. */\n  whitelistUrls: Array<string | RegExp>;\n  /** @deprecated use {@link InboundFiltersOptions.denyUrls} instead. */\n  blacklistUrls: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        // This checks prevents most of the occurrences of the bug linked below:\n        // https://github.com/getsentry/sentry-javascript/issues/2622\n        // The bug is caused by multiple SDK instances, where one is minified and one is using non-mangled code.\n        // Unfortunatelly we cannot fix it reliably (thus reserved property in rollup's terser config),\n        // as we cannot force people using multiple instances in their apps to sync SDK versions.\n        const options = typeof self._mergeOptions === 'function' ? self._mergeOptions(clientOptions) : {};\n        if (typeof self._shouldDropEvent !== 'function') {\n          return event;\n        }\n        return self._shouldDropEvent(event, options) ? null : event;\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isDeniedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.denyUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isAllowedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.allowUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: Partial<InboundFiltersOptions> = {}): Partial<InboundFiltersOptions> {\n    return {\n      allowUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.whitelistUrls || []),\n        ...(this._options.allowUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.whitelistUrls || []),\n        ...(clientOptions.allowUrls || []),\n      ],\n      denyUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.blacklistUrls || []),\n        ...(this._options.denyUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.blacklistUrls || []),\n        ...(clientOptions.denyUrls || []),\n      ],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getLastValidUrl(frames: StackFrame[] = []): string | null {\n    for (let i = frames.length - 1; i >= 0; i--) {\n      const frame = frames[i];\n\n      if (frame?.filename !== '<anonymous>' && frame?.filename !== '[native code]') {\n        return frame.filename || null;\n      }\n    }\n\n    return null;\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return this._getLastValidUrl(frames);\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return this._getLastValidUrl(frames);\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n","export const SDK_VERSION = '6.13.2';\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key (deprecated, renamed to publicKey). */\n  public user!: string;\n  /** Public authorization key. */\n  public publicKey!: string;\n  /** Private authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    const { host, path, pass, port, projectId, protocol, publicKey } = this;\n    return (\n      `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n\n    if (projectId) {\n      const projectMatch = projectId.match(/^\\d+/);\n      if (projectMatch) {\n        projectId = projectMatch[0];\n      }\n    }\n\n    this._fromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    // TODO this is for backwards compatibility, and can be removed in a future version\n    if ('user' in components && !('publicKey' in components)) {\n      components.publicKey = components.user;\n    }\n    this.user = components.publicKey || '';\n\n    this.protocol = components.protocol;\n    this.publicKey = components.publicKey || '';\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'publicKey', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(`${ERROR_MESSAGE}: ${component} missing`);\n      }\n    });\n\n    if (!this.projectId.match(/^\\d+$/)) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid projectId ${this.projectId}`);\n    }\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid protocol ${this.protocol}`);\n    }\n\n    if (this.port && isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(`${ERROR_MESSAGE}: Invalid port ${this.port}`);\n    }\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n} & { initialized?: boolean };\n\n/**\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  return integrations.reduce((acc, integrations) => {\n    if (acc.every(accIntegration => integrations.name !== accIntegration.name)) {\n      acc.push(integrations);\n    }\n    return acc;\n  }, [] as Integration[]);\n}\n\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  const userIntegrations = options.integrations;\n\n  let integrations: Integration[] = [...filterDuplicates(defaultIntegrations)];\n\n  if (Array.isArray(userIntegrations)) {\n    // Filter out integrations that are also included in user options\n    integrations = [\n      ...integrations.filter(integrations =>\n        userIntegrations.every(userIntegration => userIntegration.name !== integrations.name),\n      ),\n      // And filter out duplicated user options integrations\n      ...filterDuplicates(userIntegrations),\n    ];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(integrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  const integrationsNames = integrations.map(i => i.name);\n  const alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/** Setup given integration */\nexport function setupIntegration(integration: Integration): void {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(`Integration installed: ${integration.name}`);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations<O extends Options>(options: O): IntegrationIndex {\n  const integrations: IntegrationIndex = {};\n  getIntegrationsToSetup(options).forEach(integration => {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  // set the `initialized` flag so we don't run through the process again unecessarily; use `Object.defineProperty`\n  // because by default it creates a property which is nonenumerable, which we want since `initialized` shouldn't be\n  // considered a member of the index the way the actual integrations are\n  Object.defineProperty(integrations, 'initialized', { value: true });\n  return integrations;\n}\n","/* eslint-disable max-lines */\nimport { Scope, Session } from '@sentry/hub';\nimport {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  Options,\n  Outcome,\n  SessionStatus,\n  Severity,\n  Transport,\n} from '@sentry/types';\nimport {\n  dateTimestampInSeconds,\n  Dsn,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  normalize,\n  SentryError,\n  SyncPromise,\n  truncate,\n  uuid4,\n} from '@sentry/utils';\n\nimport { Backend, BackendClass } from './basebackend';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<B extends Backend, O extends Options> implements Client<O> {\n  /**\n   * The backend used to physically interact in the environment. Usually, this\n   * will correspond to the client. When composing SDKs, however, the Backend\n   * from the root SDK will be used.\n   */\n  protected readonly _backend: B;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: Dsn;\n\n  /** Array of used integrations. */\n  protected _integrations: IntegrationIndex = {};\n\n  /** Number of calls being processed */\n  protected _numProcessing: number = 0;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  protected constructor(backendClass: BackendClass<B, O>, options: O) {\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._getBackend()\n        .eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this._getBackend().eventFromMessage(String(message), level, hint)\n      : this._getBackend().eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!this._isEnabled()) {\n      logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this._sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      session.update({ init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._getBackend().getTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    return this._isClientDoneProcessing(timeout).then(clientFinished => {\n      return this.getTransport()\n        .close(timeout)\n        .then(transportFlushed => clientFinished && transportFlushed);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n  public setupIntegrations(): void {\n    if (this._isEnabled() && !this._integrations.initialized) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === SessionStatus.Ok;\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      session.update({\n        ...(crashed && { status: SessionStatus.Crashed }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /** Deliver captured session to Sentry */\n  protected _sendSession(session: Session): void {\n    this._getBackend().sendSession(session);\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Returns the current backend. */\n  protected _getBackend(): B {\n    return this._backend;\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    const { normalizeDepth = 3 } = this.getOptions();\n    const prepared: Event = {\n      ...event,\n      event_id: event.event_id || (hint && hint.event_id ? hint.event_id : uuid4()),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint && hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = SyncPromise.resolve<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n  protected _normalizeEvent(event: Event | null, depth: number): Event | null {\n    if (!event) {\n      return null;\n    }\n\n    const normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth),\n      }),\n    };\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      normalized.contexts.trace = event.contexts.trace;\n    }\n\n    const { _experiments = {} } = this.getOptions();\n    if (_experiments.ensureNoCircularStructures) {\n      return normalize(normalized);\n    }\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n  protected _applyClientOptions(event: Event): void {\n    const options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n  protected _applyIntegrationsMetadata(event: Event): void {\n    const integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Tells the backend to send this event\n   * @param event The Sentry event to send\n   */\n  protected _sendEvent(event: Event): void {\n    this._getBackend().sendEvent(event);\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        logger.error(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<Event> {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeSend, sampleRate } = this.getOptions();\n    const transport = this.getTransport();\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject(new SentryError('SDK not enabled, will not capture event.'));\n    }\n\n    const isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      transport.recordLostEvent?.(Outcome.SampleRate, 'event');\n      return SyncPromise.reject(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, scope, hint)\n      .then(prepared => {\n        if (prepared === null) {\n          transport.recordLostEvent?.(Outcome.EventProcessor, event.type || 'event');\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        const isInternalException = hint && hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        const beforeSendResult = beforeSend(prepared, hint);\n        return this._ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          transport.recordLostEvent?.(Outcome.BeforeSend, event.type || 'event');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        const session = scope && scope.getSession && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this._sendEvent(processedEvent);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason as Error,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * Verifies that return value of configured `beforeSend` is of expected type.\n   */\n  protected _ensureBeforeSendRv(\n    rv: PromiseLike<Event | null> | Event | null,\n  ): PromiseLike<Event | null> | Event | null {\n    const nullErr = '`beforeSend` method has to return `null` or a valid event.';\n    if (isThenable(rv)) {\n      return (rv as PromiseLike<Event | null>).then(\n        event => {\n          if (!(isPlainObject(event) || event === null)) {\n            throw new SentryError(nullErr);\n          }\n          return event;\n        },\n        e => {\n          throw new SentryError(`beforeSend rejected with ${e}`);\n        },\n      );\n    } else if (!(isPlainObject(rv) || rv === null)) {\n      throw new SentryError(nullErr);\n    }\n    return rv;\n  }\n}\n","/** The status of an event. */\n// eslint-disable-next-line import/export\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error occurred during submission. */\n  Failed = 'failed',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n","import { Event, Response, Status, Transport } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\n/** Noop transport */\nexport class NoopTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    return SyncPromise.resolve({\n      reason: `NoopTransport: Event has been skipped because no Dsn is configured.`,\n      status: Status.Skipped,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(_?: number): PromiseLike<boolean> {\n    return SyncPromise.resolve(true);\n  }\n}\n","/** JSDoc */\n// eslint-disable-next-line import/export\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n","import { Event, EventHint, Options, Session, Severity, Transport } from '@sentry/types';\nimport { logger, SentryError } from '@sentry/utils';\n\nimport { NoopTransport } from './transports/noop';\n\n/**\n * Internal platform-dependent Sentry SDK Backend.\n *\n * While {@link Client} contains business logic specific to an SDK, the\n * Backend offers platform specific implementations for low-level operations.\n * These are persisting and loading information, sending events, and hooking\n * into the environment.\n *\n * Backends receive a handle to the Client in their constructor. When a\n * Backend automatically generates events, it must pass them to\n * the Client for validation and processing first.\n *\n * Usually, the Client will be of corresponding type, e.g. NodeBackend\n * receives NodeClient. However, higher-level SDKs can choose to instantiate\n * multiple Backends and delegate tasks between them. In this case, an event\n * generated by one backend might very well be sent by another one.\n *\n * The client also provides access to options via {@link Client.getOptions}.\n * @hidden\n */\nexport interface Backend {\n  /** Creates a {@link Event} from an exception. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  eventFromException(exception: any, hint?: EventHint): PromiseLike<Event>;\n\n  /** Creates a {@link Event} from a plain message. */\n  eventFromMessage(message: string, level?: Severity, hint?: EventHint): PromiseLike<Event>;\n\n  /** Submits the event to Sentry */\n  sendEvent(event: Event): void;\n\n  /** Submits the session to Sentry */\n  sendSession(session: Session): void;\n\n  /**\n   * Returns the transport that is used by the backend.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   *\n   * @returns The transport.\n   */\n  getTransport(): Transport;\n}\n\n/**\n * A class object that can instantiate Backend objects.\n * @hidden\n */\nexport type BackendClass<B extends Backend, O extends Options> = new (options: O) => B;\n\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nexport abstract class BaseBackend<O extends Options> implements Backend {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** Cached transport used internally. */\n  protected _transport: Transport;\n\n  /** Creates a new backend instance. */\n  public constructor(options: O) {\n    this._options = options;\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n    this._transport = this._setupTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: Severity, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): void {\n    void this._transport.sendEvent(event).then(null, reason => {\n      logger.error(`Error while sending event: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): void {\n    if (!this._transport.sendSession) {\n      logger.warn(\"Dropping session because custom transport doesn't implement sendSession\");\n      return;\n    }\n\n    void this._transport.sendSession(session).then(null, reason => {\n      logger.error(`Error while sending session: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._transport;\n  }\n\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n  protected _setupTransport(): Transport {\n    return new NoopTransport();\n  }\n}\n","/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access, max-lines */\n\n/**\n * An object representing a single stack frame.\n * {Object} StackFrame\n * {string} url The JavaScript or HTML file URL.\n * {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * {string[]?} args The arguments passed to the function, if known.\n * {number=} line The line number, if known.\n * {number=} column The column number, if known.\n * {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number | null;\n  column: number | null;\n}\n\n/**\n * An object representing a JavaScript stack trace.\n * {Object} StackTrace\n * {string} name The name of the thrown exception.\n * {string} message The exception error message.\n * {TraceKit.StackFrame[]} stack An array of stack frames.\n */\nexport interface StackTrace {\n  name: string;\n  message: string;\n  mechanism?: string;\n  stack: StackFrame[];\n  failed?: boolean;\n}\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nconst geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nconst chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function computeStackTrace(ex: any): StackTrace {\n  let stack = null;\n  let popSize = 0;\n\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      popSize = ex.framesToPop;\n    } else if (reactMinifiedRegexp.test(ex.message)) {\n      popSize = 1;\n    }\n  }\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\nfunction computeStackTraceFromStackProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  const stack = [];\n  const lines = ex.stack.split('\\n');\n  let isEval;\n  let submatch;\n  let parts;\n  let element;\n\n  for (let i = 0; i < lines.length; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n\n      // Arpad: Working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n      // prefix here seems like the quickest solution for now.\n      let url = parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2];\n      // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n      // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n      let func = parts[1] || UNKNOWN_FUNCTION;\n      [func, url] = extractSafariExtensionDetails(func, url);\n\n      element = {\n        url,\n        func,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || `eval`;\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = (ex.columnNumber as number) + 1;\n      }\n\n      let url = parts[3];\n      let func = parts[1] || UNKNOWN_FUNCTION;\n      [func, url] = extractSafariExtensionDetails(func, url);\n\n      element = {\n        url,\n        func,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction computeStackTraceFromStacktraceProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  }\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace;\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  const lines = stacktrace.split('\\n');\n  const stack = [];\n  let parts;\n\n  for (let line = 0; line < lines.length; line += 2) {\n    let element = null;\n    if ((parts = opera10Regex.exec(lines[line]))) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null,\n      };\n    } else if ((parts = opera11Regex.exec(lines[line]))) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2],\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunatelly \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, url: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${url}` : `safari-web-extension:${url}`,\n      ]\n    : [func, url];\n};\n\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace: StackTrace, popSize: number): StackTrace {\n  try {\n    return {\n      ...stacktrace,\n      stack: stacktrace.stack.slice(popSize),\n    };\n  } catch (e) {\n    return stacktrace;\n  }\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractMessage(ex: any): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n","import { Event, Exception, StackFrame } from '@sentry/types';\nimport { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\n\nimport { computeStackTrace, StackFrame as TraceKitStackFrame, StackTrace as TraceKitStackTrace } from './tracekit';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace: TraceKitStackTrace): Exception {\n  const frames = prepareFramesForEvent(stacktrace.stack);\n\n  const exception: Exception = {\n    type: stacktrace.name,\n    value: stacktrace.message,\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  rejection?: boolean,\n): Event {\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            rejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace: TraceKitStackTrace): Event {\n  const exception = exceptionFromStacktrace(stacktrace);\n\n  return {\n    exception: {\n      values: [exception],\n    },\n  };\n}\n\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack: TraceKitStackFrame[]): StackFrame[] {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].func || '';\n  const lastFrameFunction = localStack[localStack.length - 1].func || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(\n      (frame: TraceKitStackFrame): StackFrame => ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n      }),\n    )\n    .reverse();\n}\n","import { Event, EventHint, Options, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromException(options: Options, exception: unknown, hint?: EventHint): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(exception, syntheticException, {\n    attachStacktrace: options.attachStacktrace,\n  });\n  addExceptionMechanism(event, {\n    handled: true,\n    type: 'generic',\n  });\n  event.level = Severity.Error;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return SyncPromise.resolve(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  options: Options,\n  message: string,\n  level: Severity = Severity.Info,\n  hint?: EventHint,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(message, syntheticException, {\n    attachStacktrace: options.attachStacktrace,\n  });\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return SyncPromise.resolve(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  exception: unknown,\n  syntheticException?: Error,\n  options: {\n    rejection?: boolean;\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    // eslint-disable-next-line no-param-reassign\n    exception = errorEvent.error;\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n    // then we just extract the name, code, and message, as they don't provide anything else\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n    const domException = exception as DOMException;\n    const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n    const message = domException.message ? `${name}: ${domException.message}` : name;\n\n    event = eventFromString(message, syntheticException, options);\n    addExceptionTypeValue(event, message);\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception as Error)) {\n    // we have a real Error object, do nothing\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it is plain Object or Event, serialize it manually and extract options\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(exception as string, syntheticException, options);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  input: string,\n  syntheticException?: Error,\n  options: {\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (options.attachStacktrace && syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n","import { Event, SdkInfo, SentryRequest, SentryRequestType, Session, SessionAggregates } from '@sentry/types';\n\nimport { API } from './api';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(api: API): SdkInfo | undefined {\n  if (!api.metadata || !api.metadata.sdk) {\n    return;\n  }\n  const { name, version } = api.metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event: Event, sdkInfo?: SdkInfo): Event {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates a SentryRequest from a Session. */\nexport function sessionToSentryRequest(session: Session | SessionAggregates, api: API): SentryRequest {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const envelopeHeaders = JSON.stringify({\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(api.forceEnvelope() && { dsn: api.getDsn().toString() }),\n  });\n  // I know this is hacky but we don't want to add `session` to request type since it's never rate limited\n  const type: SentryRequestType = 'aggregates' in session ? ('sessions' as SentryRequestType) : 'session';\n  const itemHeaders = JSON.stringify({\n    type,\n  });\n\n  return {\n    body: `${envelopeHeaders}\\n${itemHeaders}\\n${JSON.stringify(session)}`,\n    type,\n    url: api.getEnvelopeEndpointWithUrlEncodedAuth(),\n  };\n}\n\n/** Creates a SentryRequest from an event. */\nexport function eventToSentryRequest(event: Event, api: API): SentryRequest {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(api);\n  const eventType = event.type || 'event';\n  const useEnvelope = eventType === 'transaction' || api.forceEnvelope();\n\n  const { transactionSampling, ...metadata } = event.debug_meta || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n  if (Object.keys(metadata).length === 0) {\n    delete event.debug_meta;\n  } else {\n    event.debug_meta = metadata;\n  }\n\n  const req: SentryRequest = {\n    body: JSON.stringify(sdkInfo ? enhanceEventWithSdkInfo(event, api.metadata.sdk) : event),\n    type: eventType,\n    url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth(),\n  };\n\n  // https://develop.sentry.dev/sdk/envelopes/\n\n  // Since we don't need to manipulate envelopes nor store them, there is no\n  // exported concept of an Envelope with operations including serialization and\n  // deserialization. Instead, we only implement a minimal subset of the spec to\n  // serialize events inline here.\n  if (useEnvelope) {\n    const envelopeHeaders = JSON.stringify({\n      event_id: event.event_id,\n      sent_at: new Date().toISOString(),\n      ...(sdkInfo && { sdk: sdkInfo }),\n      ...(api.forceEnvelope() && { dsn: api.getDsn().toString() }),\n    });\n    const itemHeaders = JSON.stringify({\n      type: eventType,\n\n      // TODO: Right now, sampleRate may or may not be defined (it won't be in the cases of inheritance and\n      // explicitly-set sampling decisions). Are we good with that?\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n\n      // The content-type is assumed to be 'application/json' and not part of\n      // the current spec for transaction items, so we don't bloat the request\n      // body with it.\n      //\n      // content_type: 'application/json',\n      //\n      // The length is optional. It must be the number of bytes in req.Body\n      // encoded as UTF-8. Since the server can figure this out and would\n      // otherwise refuse events that report the length incorrectly, we decided\n      // not to send the length to avoid problems related to reporting the wrong\n      // size and to reduce request body size.\n      //\n      // length: new TextEncoder().encode(req.body).length,\n    });\n    // The trailing newline is optional. We intentionally don't send it to avoid\n    // sending unnecessary bytes.\n    //\n    // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n    const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}`;\n    req.body = envelope;\n  }\n\n  return req;\n}\n","import { DsnLike, SdkMetadata } from '@sentry/types';\nimport { Dsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/**\n * Helper class to provide urls, headers and metadata that can be used to form\n * different types of requests to Sentry endpoints.\n * Supports both envelopes and regular event requests.\n **/\nexport class API {\n  /** The DSN as passed to Sentry.init() */\n  public dsn: DsnLike;\n\n  /** Metadata about the SDK (name, version, etc) for inclusion in envelope headers */\n  public metadata: SdkMetadata;\n\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: Dsn;\n\n  /** The envelope tunnel to use. */\n  private readonly _tunnel?: string;\n\n  /** Create a new instance of API */\n  public constructor(dsn: DsnLike, metadata: SdkMetadata = {}, tunnel?: string) {\n    this.dsn = dsn;\n    this._dsnObject = new Dsn(dsn);\n    this.metadata = metadata;\n    this._tunnel = tunnel;\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): Dsn {\n    return this._dsnObject;\n  }\n\n  /** Does this transport force envelopes? */\n  public forceEnvelope(): boolean {\n    return !!this._tunnel;\n  }\n\n  /** Returns the prefix to construct Sentry ingestion API endpoints. */\n  public getBaseApiEndpoint(): string {\n    const dsn = this.getDsn();\n    const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n    const port = dsn.port ? `:${dsn.port}` : '';\n    return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n  }\n\n  /** Returns the store endpoint URL. */\n  public getStoreEndpoint(): string {\n    return this._getIngestEndpoint('store');\n  }\n\n  /**\n   * Returns the store endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    return `${this.getStoreEndpoint()}?${this._encodedAuth()}`;\n  }\n\n  /**\n   * Returns the envelope endpoint URL with auth in the query string.\n   *\n   * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n   */\n  public getEnvelopeEndpointWithUrlEncodedAuth(): string {\n    if (this.forceEnvelope()) {\n      return this._tunnel as string;\n    }\n\n    return `${this._getEnvelopeEndpoint()}?${this._encodedAuth()}`;\n  }\n\n  /** Returns only the path component for the store endpoint. */\n  public getStoreEndpointPath(): string {\n    const dsn = this.getDsn();\n    return `${dsn.path ? `/${dsn.path}` : ''}/api/${dsn.projectId}/store/`;\n  }\n\n  /**\n   * Returns an object that can be used in request headers.\n   * This is needed for node and the old /store endpoint in sentry\n   */\n  public getRequestHeaders(clientName: string, clientVersion: string): { [key: string]: string } {\n    // CHANGE THIS to use metadata but keep clientName and clientVersion compatible\n    const dsn = this.getDsn();\n    const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n    header.push(`sentry_client=${clientName}/${clientVersion}`);\n    header.push(`sentry_key=${dsn.publicKey}`);\n    if (dsn.pass) {\n      header.push(`sentry_secret=${dsn.pass}`);\n    }\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', '),\n    };\n  }\n\n  /** Returns the url to the report dialog endpoint. */\n  public getReportDialogEndpoint(\n    dialogOptions: {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      user?: { name?: string; email?: string };\n    } = {},\n  ): string {\n    const dsn = this.getDsn();\n    const endpoint = `${this.getBaseApiEndpoint()}embed/error-page/`;\n\n    const encodedOptions = [];\n    encodedOptions.push(`dsn=${dsn.toString()}`);\n    for (const key in dialogOptions) {\n      if (key === 'dsn') {\n        continue;\n      }\n\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n        if (dialogOptions.user.name) {\n          encodedOptions.push(`name=${encodeURIComponent(dialogOptions.user.name)}`);\n        }\n        if (dialogOptions.user.email) {\n          encodedOptions.push(`email=${encodeURIComponent(dialogOptions.user.email)}`);\n        }\n      } else {\n        encodedOptions.push(`${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`);\n      }\n    }\n    if (encodedOptions.length) {\n      return `${endpoint}?${encodedOptions.join('&')}`;\n    }\n\n    return endpoint;\n  }\n\n  /** Returns the envelope endpoint URL. */\n  private _getEnvelopeEndpoint(): string {\n    return this._getIngestEndpoint('envelope');\n  }\n\n  /** Returns the ingest API endpoint for target. */\n  private _getIngestEndpoint(target: 'store' | 'envelope'): string {\n    if (this._tunnel) {\n      return this._tunnel;\n    }\n    const base = this.getBaseApiEndpoint();\n    const dsn = this.getDsn();\n    return `${base}${dsn.projectId}/${target}/`;\n  }\n\n  /** Returns a URL-encoded string with auth config suitable for a query string. */\n  private _encodedAuth(): string {\n    const dsn = this.getDsn();\n    const auth = {\n      // We send only the minimum set of required information. See\n      // https://github.com/getsentry/sentry-javascript/issues/2572.\n      sentry_key: dsn.publicKey,\n      sentry_version: SENTRY_API_VERSION,\n    };\n    return urlEncode(auth);\n  }\n}\n","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<PromiseLike<T>> = [];\n\n  public constructor(protected _limit?: number) {}\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  public add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!this.isReady()) {\n      return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    void task\n      .then(() => this.remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        this.remove(task).then(null, () => {\n          // We have to add another catch here because `this.remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  public remove(task: PromiseLike<T>): PromiseLike<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  public drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>(resolve => {\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      void SyncPromise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .then(null, () => {\n          resolve(true);\n        });\n    });\n  }\n}\n","import { API } from '@sentry/core';\nimport {\n  Event,\n  Outcome,\n  Response as SentryResponse,\n  SentryRequestType,\n  Status,\n  Transport,\n  TransportOptions,\n} from '@sentry/types';\nimport {\n  dateTimestampInSeconds,\n  getGlobalObject,\n  logger,\n  parseRetryAfterHeader,\n  PromiseBuffer,\n  SentryError,\n} from '@sentry/utils';\n\nconst CATEGORY_MAPPING: {\n  [key in SentryRequestType]: string;\n} = {\n  event: 'error',\n  transaction: 'transaction',\n  session: 'session',\n  attachment: 'attachment',\n};\n\nconst global = getGlobalObject<Window>();\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @deprecated\n   */\n  public url: string;\n\n  /** Helper to get Sentry API endpoints. */\n  protected readonly _api: API;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<SentryResponse> = new PromiseBuffer(30);\n\n  /** Locks transport after receiving rate limits in a response */\n  protected readonly _rateLimits: Record<string, Date> = {};\n\n  protected _outcomes: { [key: string]: number } = {};\n\n  public constructor(public options: TransportOptions) {\n    this._api = new API(options.dsn, options._metadata, options.tunnel);\n    // eslint-disable-next-line deprecation/deprecation\n    this.url = this._api.getStoreEndpointWithUrlEncodedAuth();\n\n    if (this.options.sendClientReports && global.document) {\n      global.document.addEventListener('visibilitychange', () => {\n        if (global.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<SentryResponse> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordLostEvent(reason: Outcome, category: SentryRequestType): void {\n    if (!this.options.sendClientReports) {\n      return;\n    }\n    // We want to track each category (event, transaction, session) separately\n    // but still keep the distinction between different type of outcomes.\n    // We could use nested maps, but it's much easier to read and type this way.\n    // A correct type for map-based implementation if we want to go that route\n    // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n    const key = `${CATEGORY_MAPPING[category]}:${reason}`;\n    logger.log(`Adding outcome: ${key}`);\n    this._outcomes[key] = (this._outcomes[key] ?? 0) + 1;\n  }\n\n  /**\n   * Send outcomes as an envelope\n   */\n  protected _flushOutcomes(): void {\n    if (!this.options.sendClientReports) {\n      return;\n    }\n\n    if (!global.navigator || typeof global.navigator.sendBeacon !== 'function') {\n      logger.warn('Beacon API not available, skipping sending outcomes.');\n      return;\n    }\n\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n\n    // Nothing to send\n    if (!Object.keys(outcomes).length) {\n      logger.log('No outcomes to flush');\n      return;\n    }\n\n    logger.log(`Flushing outcomes:\\n${JSON.stringify(outcomes, null, 2)}`);\n\n    const url = this._api.getEnvelopeEndpointWithUrlEncodedAuth();\n    // Envelope header is required to be at least an empty object\n    const envelopeHeader = JSON.stringify({});\n    const itemHeaders = JSON.stringify({\n      type: 'client_report',\n    });\n    const item = JSON.stringify({\n      timestamp: dateTimestampInSeconds(),\n      discarded_events: Object.keys(outcomes).map(key => {\n        const [category, reason] = key.split(':');\n        return {\n          reason,\n          category,\n          quantity: outcomes[key],\n        };\n      }),\n    });\n    const envelope = `${envelopeHeader}\\n${itemHeaders}\\n${item}`;\n\n    global.navigator.sendBeacon(url, envelope);\n  }\n\n  /**\n   * Handle Sentry repsonse for promise-based transports.\n   */\n  protected _handleResponse({\n    requestType,\n    response,\n    headers,\n    resolve,\n    reject,\n  }: {\n    requestType: SentryRequestType;\n    response: Response | XMLHttpRequest;\n    headers: Record<string, string | null>;\n    resolve: (value?: SentryResponse | PromiseLike<SentryResponse> | null | undefined) => void;\n    reject: (reason?: unknown) => void;\n  }): void {\n    const status = Status.fromHttpCode(response.status);\n    /**\n     * \"The name is case-insensitive.\"\n     * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n     */\n    const limited = this._handleRateLimit(headers);\n    if (limited)\n      logger.warn(`Too many ${requestType} requests, backing off until: ${this._disabledUntil(requestType)}`);\n\n    if (status === Status.Success) {\n      resolve({ status });\n      return;\n    }\n\n    reject(response);\n  }\n\n  /**\n   * Gets the time that given category is disabled until for rate limiting\n   */\n  protected _disabledUntil(requestType: SentryRequestType): Date {\n    const category = CATEGORY_MAPPING[requestType];\n    return this._rateLimits[category] || this._rateLimits.all;\n  }\n\n  /**\n   * Checks if a category is rate limited\n   */\n  protected _isRateLimited(requestType: SentryRequestType): boolean {\n    return this._disabledUntil(requestType) > new Date(Date.now());\n  }\n\n  /**\n   * Sets internal _rateLimits from incoming headers. Returns true if headers contains a non-empty rate limiting header.\n   */\n  protected _handleRateLimit(headers: Record<string, string | null>): boolean {\n    const now = Date.now();\n    const rlHeader = headers['x-sentry-rate-limits'];\n    const raHeader = headers['retry-after'];\n\n    if (rlHeader) {\n      // rate limit headers are of the form\n      //     <header>,<header>,..\n      // where each <header> is of the form\n      //     <retry_after>: <categories>: <scope>: <reason_code>\n      // where\n      //     <retry_after> is a delay in ms\n      //     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n      //         <category>;<category>;...\n      //     <scope> is what's being limited (org, project, or key) - ignored by SDK\n      //     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n      for (const limit of rlHeader.trim().split(',')) {\n        const parameters = limit.split(':', 2);\n        const headerDelay = parseInt(parameters[0], 10);\n        const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n        for (const category of parameters[1].split(';')) {\n          this._rateLimits[category || 'all'] = new Date(now + delay);\n        }\n      }\n      return true;\n    } else if (raHeader) {\n      this._rateLimits.all = new Date(now + parseRetryAfterHeader(now, raHeader));\n      return true;\n    }\n    return false;\n  }\n}\n","import { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Event, Outcome, Response, SentryRequest, Session, TransportOptions } from '@sentry/types';\nimport {\n  getGlobalObject,\n  isNativeFetch,\n  logger,\n  SentryError,\n  supportsReferrerPolicy,\n  SyncPromise,\n} from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\ntype FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation(): FetchImpl {\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  const global = getGlobalObject<Window>();\n  if (isNativeFetch(global.fetch)) {\n    return global.fetch.bind(global);\n  }\n\n  const document = global.document;\n  let fetchImpl = global.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof document?.createElement === `function`) {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      if (sandbox.contentWindow?.fetch) {\n        fetchImpl = sandbox.contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return fetchImpl.bind(global);\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** `fetch` based transport */\nexport class FetchTransport extends BaseTransport {\n  /**\n   * Fetch API reference which always points to native browser implementation.\n   */\n  private _fetch: typeof fetch;\n\n  public constructor(options: TransportOptions, fetchImpl: FetchImpl = getNativeFetchImplementation()) {\n    super(options);\n    this._fetch = fetchImpl;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<Response> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @param sentryRequest Prepared SentryRequest to be delivered\n   * @param originalPayload Original payload used to create SentryRequest\n   */\n  private _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n    if (this._isRateLimited(sentryRequest.type)) {\n      this.recordLostEvent(Outcome.RateLimitBackoff, sentryRequest.type);\n\n      return Promise.reject({\n        event: originalPayload,\n        type: sentryRequest.type,\n        reason: `Transport for ${sentryRequest.type} requests locked till ${this._disabledUntil(\n          sentryRequest.type,\n        )} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    const options: RequestInit = {\n      body: sentryRequest.body,\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n    if (this.options.fetchParameters !== undefined) {\n      Object.assign(options, this.options.fetchParameters);\n    }\n    if (this.options.headers !== undefined) {\n      options.headers = this.options.headers;\n    }\n\n    return this._buffer\n      .add(\n        () =>\n          new SyncPromise<Response>((resolve, reject) => {\n            void this._fetch(sentryRequest.url, options)\n              .then(response => {\n                const headers = {\n                  'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n                  'retry-after': response.headers.get('Retry-After'),\n                };\n                this._handleResponse({\n                  requestType: sentryRequest.type,\n                  response,\n                  headers,\n                  resolve,\n                  reject,\n                });\n              })\n              .catch(reject);\n          }),\n      )\n      .then(undefined, reason => {\n        // It's either buffer rejection or any other xhr/fetch error, which are treated as NetworkError.\n        if (reason instanceof SentryError) {\n          this.recordLostEvent(Outcome.QueueOverflow, sentryRequest.type);\n        } else {\n          this.recordLostEvent(Outcome.NetworkError, sentryRequest.type);\n        }\n        throw reason;\n      });\n  }\n}\n","import { eventToSentryRequest, sessionToSentryRequest } from '@sentry/core';\nimport { Event, Outcome, Response, SentryRequest, Session } from '@sentry/types';\nimport { SentryError, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    return this._sendRequest(eventToSentryRequest(event, this._api), event);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session): PromiseLike<Response> {\n    return this._sendRequest(sessionToSentryRequest(session, this._api), session);\n  }\n\n  /**\n   * @param sentryRequest Prepared SentryRequest to be delivered\n   * @param originalPayload Original payload used to create SentryRequest\n   */\n  private _sendRequest(sentryRequest: SentryRequest, originalPayload: Event | Session): PromiseLike<Response> {\n    if (this._isRateLimited(sentryRequest.type)) {\n      this.recordLostEvent(Outcome.RateLimitBackoff, sentryRequest.type);\n\n      return Promise.reject({\n        event: originalPayload,\n        type: sentryRequest.type,\n        reason: `Transport for ${sentryRequest.type} requests locked till ${this._disabledUntil(\n          sentryRequest.type,\n        )} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    return this._buffer\n      .add(\n        () =>\n          new SyncPromise<Response>((resolve, reject) => {\n            const request = new XMLHttpRequest();\n\n            request.onreadystatechange = (): void => {\n              if (request.readyState === 4) {\n                const headers = {\n                  'x-sentry-rate-limits': request.getResponseHeader('X-Sentry-Rate-Limits'),\n                  'retry-after': request.getResponseHeader('Retry-After'),\n                };\n                this._handleResponse({ requestType: sentryRequest.type, response: request, headers, resolve, reject });\n              }\n            };\n\n            request.open('POST', sentryRequest.url);\n            for (const header in this.options.headers) {\n              if (this.options.headers.hasOwnProperty(header)) {\n                request.setRequestHeader(header, this.options.headers[header]);\n              }\n            }\n            request.send(sentryRequest.body);\n          }),\n      )\n      .then(undefined, reason => {\n        // It's either buffer rejection or any other xhr/fetch error, which are treated as NetworkError.\n        if (reason instanceof SentryError) {\n          this.recordLostEvent(Outcome.QueueOverflow, sentryRequest.type);\n        } else {\n          this.recordLostEvent(Outcome.NetworkError, sentryRequest.type);\n        }\n        throw reason;\n      });\n  }\n}\n","import { BaseBackend } from '@sentry/core';\nimport { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { supportsFetch } from '@sentry/utils';\n\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see BrowserClient for more information.\n */\nexport interface BrowserOptions extends Options {\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.denyUrls}.\n   * By default, all errors will be sent.\n   */\n  allowUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To allow certain errors instead, use {@link Options.allowUrls}.\n   * By default, all errors will be sent.\n   */\n  denyUrls?: Array<string | RegExp>;\n\n  /** @deprecated use {@link Options.allowUrls} instead. */\n  whitelistUrls?: Array<string | RegExp>;\n\n  /** @deprecated use {@link Options.denyUrls} instead. */\n  blacklistUrls?: Array<string | RegExp>;\n}\n\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nexport class BrowserBackend extends BaseBackend<BrowserOptions> {\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options, exception, hint);\n  }\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(message: string, level: Severity = Severity.Info, hint?: EventHint): PromiseLike<Event> {\n    return eventFromMessage(this._options, message, level, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _setupTransport(): Transport {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return super._setupTransport();\n    }\n\n    const transportOptions = {\n      ...this._options.transportOptions,\n      dsn: this._options.dsn,\n      tunnel: this._options.tunnel,\n      sendClientReports: this._options.sendClientReports,\n      _metadata: this._options._metadata,\n    };\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n    return new XHRTransport(transportOptions);\n  }\n}\n","import { getCurrentHub, Hub, Scope } from '@sentry/hub';\nimport {\n  Breadcrumb,\n  CaptureContext,\n  CustomSamplingContext,\n  Event,\n  Extra,\n  Extras,\n  Primitive,\n  Severity,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\n\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction callOnHub<T>(method: string, ...args: any[]): T {\n  const hub = getCurrentHub();\n  if (hub && hub[method as keyof Hub]) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (hub[method as keyof Hub] as any)(...args);\n  }\n  throw new Error(`No hub defined or ${method} was not found on the hub, please open a bug report.`);\n}\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception: any, captureContext?: CaptureContext): string {\n  let syntheticException: Error;\n  try {\n    throw new Error('Sentry syntheticException');\n  } catch (exception) {\n    syntheticException = exception as Error;\n  }\n  return callOnHub('captureException', exception, {\n    captureContext,\n    originalException: exception,\n    syntheticException,\n  });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message: string, captureContext?: CaptureContext | Severity): string {\n  let syntheticException: Error;\n  try {\n    throw new Error(message);\n  } catch (exception) {\n    syntheticException = exception as Error;\n  }\n\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n\n  return callOnHub('captureMessage', message, level, {\n    originalException: message,\n    syntheticException,\n    ...context,\n  });\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event: Event): string {\n  return callOnHub('captureEvent', event);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback: (scope: Scope) => void): void {\n  callOnHub<void>('configureScope', callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb): void {\n  callOnHub<void>('addBreadcrumb', breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name: string, context: { [key: string]: any } | null): void {\n  callOnHub<void>('setContext', name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): void {\n  callOnHub<void>('setExtras', extras);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): void {\n  callOnHub<void>('setTags', tags);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): void {\n  callOnHub<void>('setExtra', key, extra);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): void {\n  callOnHub<void>('setTag', key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): void {\n  callOnHub<void>('setUser', user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback: (scope: Scope) => void): void {\n  callOnHub<void>('withScope', callback);\n}\n\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _callOnClient(method: string, ...args: any[]): void {\n  callOnHub<void>('_invokeClient', method, ...args);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  return callOnHub('startTransaction', { ...context }, customSamplingContext);\n}\n","import { API, captureException, withScope } from '@sentry/core';\nimport { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, getGlobalObject, logger } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: args,\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options: ReportDialogOptions = {}): void {\n  if (!global.document) {\n    return;\n  }\n\n  if (!options.eventId) {\n    logger.error(`Missing eventId option in showReportDialog call`);\n    return;\n  }\n\n  if (!options.dsn) {\n    logger.error(`Missing dsn option in showReportDialog call`);\n    return;\n  }\n\n  const script = global.document.createElement('script');\n  script.async = true;\n  script.src = new API(options.dsn).getReportDialogEndpoint(options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = global.document.head || global.document.body;\n\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addInstrumentationHandler,\n  getEventDescription,\n  getGlobalObject,\n  htmlTreeAsString,\n  parseUrl,\n  safeJoin,\n} from '@sentry/utils';\n\n/** JSDoc */\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom: boolean | { serializeAttribute: string | string[] };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /** JSDoc */\n  private readonly _options: BreadcrumbsOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<BreadcrumbsOptions>) {\n    this._options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Create a breadcrumb of `sentry` from the events themselves\n   */\n  public addSentryBreadcrumb(event: Event): void {\n    if (!this._options.sentry) {\n      return;\n    }\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this._options.console) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._consoleBreadcrumb(...args);\n        },\n        type: 'console',\n      });\n    }\n    if (this._options.dom) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._domBreadcrumb(...args);\n        },\n        type: 'dom',\n      });\n    }\n    if (this._options.xhr) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._xhrBreadcrumb(...args);\n        },\n        type: 'xhr',\n      });\n    }\n    if (this._options.fetch) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._fetchBreadcrumb(...args);\n        },\n        type: 'fetch',\n      });\n    }\n    if (this._options.history) {\n      addInstrumentationHandler({\n        callback: (...args) => {\n          this._historyBreadcrumb(...args);\n        },\n        type: 'history',\n      });\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from console API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _consoleBreadcrumb(handlerData: { [key: string]: any }): void {\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: Severity.fromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    getCurrentHub().addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  }\n\n  /**\n   * Creates breadcrumbs from DOM API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _domBreadcrumb(handlerData: { [key: string]: any }): void {\n    let target;\n    let keyAttrs = typeof this._options.dom === 'object' ? this._options.dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target as Node, keyAttrs)\n        : htmlTreeAsString((handlerData.event as unknown) as Node, keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  /**\n   * Creates breadcrumbs from XHR API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _xhrBreadcrumb(handlerData: { [key: string]: any }): void {\n    if (handlerData.endTimestamp) {\n      // We only capture complete, non-sentry requests\n      if (handlerData.xhr.__sentry_own_request__) {\n        return;\n      }\n\n      const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'xhr',\n          data: {\n            method,\n            url,\n            status_code,\n          },\n          type: 'http',\n        },\n        {\n          xhr: handlerData.xhr,\n          input: body,\n        },\n      );\n\n      return;\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from fetch API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _fetchBreadcrumb(handlerData: { [key: string]: any }): void {\n    // We only capture complete fetch requests\n    if (!handlerData.endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: handlerData.fetchData,\n          level: Severity.Error,\n          type: 'http',\n        },\n        {\n          data: handlerData.error,\n          input: handlerData.args,\n        },\n      );\n    } else {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: 'fetch',\n          data: {\n            ...handlerData.fetchData,\n            status_code: handlerData.response.status,\n          },\n          type: 'http',\n        },\n        {\n          input: handlerData.args,\n          response: handlerData.response,\n        },\n      );\n    }\n  }\n\n  /**\n   * Creates breadcrumbs from history API calls\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _historyBreadcrumb(handlerData: { [key: string]: any }): void {\n    const global = getGlobalObject<Window>();\n    let from = handlerData.from;\n    let to = handlerData.to;\n    const parsedLoc = parseUrl(global.location.href);\n    let parsedFrom = parseUrl(from);\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    getCurrentHub().addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  }\n}\n","import { BaseClient, Scope, SDK_VERSION } from '@sentry/core';\nimport { Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { injectReportDialog, ReportDialogOptions } from './helpers';\nimport { Breadcrumbs } from './integrations';\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client disabled');\n      return;\n    }\n\n    injectReportDialog({\n      ...options,\n      dsn: options.dsn || this.getDsn(),\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _sendEvent(event: Event): void {\n    const integration = this.getIntegration(Breadcrumbs);\n    if (integration) {\n      integration.addSentryBreadcrumb(event);\n    }\n    super._sendEvent(event);\n  }\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\n/** JSDoc */\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /** JSDoc */\n  private readonly _options: TryCatchOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: Partial<TryCatchOptions>) {\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    const global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n    }\n\n    if (this._options.eventTarget) {\n      const eventTarget = Array.isArray(this._options.eventTarget) ? this._options.eventTarget : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(this._wrapEventTarget.bind(this));\n    }\n  }\n\n  /** JSDoc */\n  private _wrapTimeFunction(original: () => void): () => number {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: any, ...args: any[]): number {\n      const originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: { function: getFunctionName(original) },\n          handled: true,\n          type: 'instrument',\n        },\n      });\n      return original.apply(this, args);\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _wrapRAF(original: any): (callback: () => void) => any {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: any, callback: () => void): () => void {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return original.call(\n        this,\n        wrap(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original),\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n      );\n    };\n  }\n\n  /** JSDoc */\n  private _wrapEventTarget(target: string): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const global = getGlobalObject() as { [key: string]: any };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = global[target] && global[target].prototype;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (eventName: string, fn: EventListenerObject, options?: boolean | AddEventListenerOptions) => void {\n      return function(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n        try {\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target,\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            });\n          }\n        } catch (err) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(\n          this,\n          eventName,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          wrap((fn as any) as WrappedFunction, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n          options,\n        );\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = (fn as unknown) as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler?.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    });\n  }\n\n  /** JSDoc */\n  private _wrapXHR(originalSend: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function(this: XMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n      xmlHttpRequestProps.forEach(prop => {\n        if (prop in xhr && typeof xhr[prop] === 'function') {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          fill(xhr, prop, function(original: WrappedFunction): () => any {\n            const wrapOptions = {\n              mechanism: {\n                data: {\n                  function: prop,\n                  handler: getFunctionName(original),\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            };\n\n            // If Instrument integration has been called before TryCatch, get the name of original function\n            if (original.__sentry_original__) {\n              wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n            }\n\n            // Otherwise wrap directly\n            return wrap(original, wrapOptions);\n          });\n        }\n      });\n\n      return originalSend.apply(this, args);\n    };\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Primitive, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  private _onErrorHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  private _onUnhandledRejectionHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  }\n\n  /** JSDoc */\n  private _installGlobalOnErrorHandler(): void {\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (data: { msg: any; url: any; line: any; column: any; error: any }) => {\n        const error = data.error;\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return;\n        }\n\n        const client = currentHub.getClient();\n        const event =\n          error === undefined && isString(data.msg)\n            ? this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n            : this._enhanceEventWithInitialFrame(\n                eventFromUnknownInput(error || data.msg, undefined, {\n                  attachStacktrace: client && client.getOptions().attachStacktrace,\n                  rejection: false,\n                }),\n                data.url,\n                data.line,\n                data.column,\n              );\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onerror',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n      },\n      type: 'error',\n    });\n\n    this._onErrorHandlerInstalled = true;\n  }\n\n  /** JSDoc */\n  private _installGlobalOnUnhandledRejectionHandler(): void {\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n\n    addInstrumentationHandler({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (e: any) => {\n        let error = e;\n\n        // dig the object of the rejection out of known event types\n        try {\n          // PromiseRejectionEvents store the object of the rejection under 'reason'\n          // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n          if ('reason' in e) {\n            error = e.reason;\n          }\n          // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n          // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n          // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n          // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n          // https://github.com/getsentry/sentry-javascript/issues/2380\n          else if ('detail' in e && 'reason' in e.detail) {\n            error = e.detail.reason;\n          }\n        } catch (_oO) {\n          // no-empty\n        }\n\n        const currentHub = getCurrentHub();\n        const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n        const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n        if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n          return true;\n        }\n\n        const client = currentHub.getClient();\n        const event = isPrimitive(error)\n          ? this._eventFromRejectionWithPrimitive(error)\n          : eventFromUnknownInput(error, undefined, {\n              attachStacktrace: client && client.getOptions().attachStacktrace,\n              rejection: true,\n            });\n\n        event.level = Severity.Error;\n\n        addExceptionMechanism(event, {\n          handled: false,\n          type: 'onunhandledrejection',\n        });\n\n        currentHub.captureEvent(event, {\n          originalException: error,\n        });\n\n        return;\n      },\n      type: 'unhandledrejection',\n    });\n\n    this._onUnhandledRejectionHandlerInstalled = true;\n  }\n\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n    const ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n    // If 'message' is ErrorEvent, get real message from inside\n    let message = isErrorEvent(msg) ? msg.message : msg;\n    let name;\n\n    const groups = message.match(ERROR_TYPES_RE);\n    if (groups) {\n      name = groups[1];\n      message = groups[2];\n    }\n\n    const event = {\n      exception: {\n        values: [\n          {\n            type: name || 'Error',\n            value: message,\n          },\n        ],\n      },\n    };\n\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  }\n\n  /**\n   * Create an event from a promise rejection where the `reason` is a primitive.\n   *\n   * @param reason: The `reason` property of the promise rejection\n   * @returns An Event object with an appropriate `exception` value\n   */\n  private _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n    return {\n      exception: {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n            value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n          },\n        ],\n      },\n    };\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n\n    const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno,\n        filename,\n        function: '?',\n        in_app: true,\n        lineno,\n      });\n    }\n\n    return event;\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\nimport { isInstanceOf } from '@sentry/utils';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        const handler = self._handler && self._handler.bind(self);\n        return typeof handler === 'function' ? handler(event, hint) : event;\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException as ExtendedError, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n","import { Event, EventProcessor, Exception, Hub, Integration, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nexport class Dedupe implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Dedupe';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Dedupe.id;\n\n  /**\n   * @inheritDoc\n   */\n  private _previousEvent?: Event;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor((currentEvent: Event) => {\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (self._shouldDropEvent(currentEvent, self._previousEvent)) {\n            logger.warn(`Event dropped due to being a duplicate of previously captured event.`);\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n    if (!previousEvent) {\n      return false;\n    }\n\n    if (this._isSameMessageEvent(currentEvent, previousEvent)) {\n      return true;\n    }\n\n    if (this._isSameExceptionEvent(currentEvent, previousEvent)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n    const currentMessage = currentEvent.message;\n    const previousMessage = previousEvent.message;\n\n    // If neither event has a message property, they were both exceptions, so bail out\n    if (!currentMessage && !previousMessage) {\n      return false;\n    }\n\n    // If only one event has a stacktrace, but not the other one, they are not the same\n    if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n      return false;\n    }\n\n    if (currentMessage !== previousMessage) {\n      return false;\n    }\n\n    if (!this._isSameFingerprint(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    if (!this._isSameStacktrace(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n    const exception = event.exception;\n\n    if (exception) {\n      try {\n        // @ts-ignore Object could be undefined\n        return exception.values[0].stacktrace.frames;\n      } catch (_oO) {\n        return undefined;\n      }\n    } else if (event.stacktrace) {\n      return event.stacktrace.frames;\n    }\n    return undefined;\n  }\n\n  /** JSDoc */\n  private _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n    let currentFrames = this._getFramesFromEvent(currentEvent);\n    let previousFrames = this._getFramesFromEvent(previousEvent);\n\n    // If neither event has a stacktrace, they are assumed to be the same\n    if (!currentFrames && !previousFrames) {\n      return true;\n    }\n\n    // If only one event has a stacktrace, but not the other one, they are not the same\n    if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n      return false;\n    }\n\n    currentFrames = currentFrames as StackFrame[];\n    previousFrames = previousFrames as StackFrame[];\n\n    // If number of frames differ, they are not the same\n    if (previousFrames.length !== currentFrames.length) {\n      return false;\n    }\n\n    // Otherwise, compare the two\n    for (let i = 0; i < previousFrames.length; i++) {\n      const frameA = previousFrames[i];\n      const frameB = currentFrames[i];\n\n      if (\n        frameA.filename !== frameB.filename ||\n        frameA.lineno !== frameB.lineno ||\n        frameA.colno !== frameB.colno ||\n        frameA.function !== frameB.function\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _getExceptionFromEvent(event: Event): Exception | undefined {\n    return event.exception && event.exception.values && event.exception.values[0];\n  }\n\n  /** JSDoc */\n  private _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n    const previousException = this._getExceptionFromEvent(previousEvent);\n    const currentException = this._getExceptionFromEvent(currentEvent);\n\n    if (!previousException || !currentException) {\n      return false;\n    }\n\n    if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n      return false;\n    }\n\n    if (!this._isSameFingerprint(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    if (!this._isSameStacktrace(currentEvent, previousEvent)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** JSDoc */\n  private _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n    let currentFingerprint = currentEvent.fingerprint;\n    let previousFingerprint = previousEvent.fingerprint;\n\n    // If neither event has a fingerprint, they are assumed to be the same\n    if (!currentFingerprint && !previousFingerprint) {\n      return true;\n    }\n\n    // If only one event has a fingerprint, but not the other one, they are not the same\n    if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n      return false;\n    }\n\n    currentFingerprint = currentFingerprint as string[];\n    previousFingerprint = previousFingerprint as string[];\n\n    // Otherwise, compare the two\n    try {\n      return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n    } catch (_oO) {\n      return false;\n    }\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = event.request?.url || global.location?.href;\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        const headers = {\n          ...event.request?.headers,\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { addInstrumentationHandler, getGlobalObject, logger, SyncPromise } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient } from './client';\nimport { ReportDialogOptions, wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, Dedupe, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  initAndBind(BrowserClient, options);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n  const client = hub.getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  logger.warn('Cannot flush events. No client defined.');\n  return SyncPromise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return SyncPromise.resolve(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  const window = getGlobalObject<Window>();\n  const document = window.document;\n\n  if (typeof document === 'undefined') {\n    logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (typeof hub.startSession !== 'function' || typeof hub.captureSession !== 'function') {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler({\n    callback: ({ from, to }) => {\n      // Don't create an additional session for the initial route or if the location did not change\n      if (from === undefined || from === to) {\n        return;\n      }\n      hub.startSession({ ignoreDuration: true });\n      hub.captureSession();\n    },\n    type: 'history',\n  });\n}\n","import { getGlobalObject, logger } from '@sentry/utils';\n\nimport { IdleTransaction } from '../idletransaction';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction } from '../utils';\n\nconst global = getGlobalObject<Window>();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (global.document.hidden && activeTransaction) {\n        logger.log(\n          `[Tracing] Transaction: ${SpanStatus.Cancelled} -> since tab moved to the background, op: ${activeTransaction.op}`,\n        );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(SpanStatus.Cancelled);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Metric, ReportHandler } from '../types';\n\nexport const bindReporter = (\n  callback: ReportHandler,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || prevValue === undefined) {\n          prevValue = metric.value;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  return {\n    name,\n    value: value ?? -1,\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v2-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = (type: string, callback: PerformanceEntryHandler): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      // More extensive feature detect needed for Firefox due to:\n      // https://github.com/GoogleChrome/web-vitals/issues/142\n      if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n        return;\n      }\n\n      const po: PerformanceObserver = new PerformanceObserver(l => l.getEntries().map(callback));\n\n      po.observe({ type, buffered: true });\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobalObject } from '@sentry/utils';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || getGlobalObject<Window>().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobalObject } from '@sentry/utils';\n\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): number => {\n  return getGlobalObject<Window>().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe, PerformanceEntryHandler } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { ReportHandler } from './types';\n\n// https://wicg.github.io/largest-contentful-paint/#sec-largest-contentful-paint-interface\nexport interface LargestContentfulPaint extends PerformanceEntry {\n  renderTime: DOMHighResTimeStamp;\n  loadTime: DOMHighResTimeStamp;\n  size: number;\n  id: string;\n  url: string;\n  element?: Element;\n  toJSON(): Record<string, string>;\n}\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\nexport const getLCP = (onReport: ReportHandler, reportAllChanges?: boolean): void => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const entryHandler = (entry: PerformanceEntry): void => {\n    // The startTime attribute returns the value of the renderTime if it is not 0,\n    // and the value of the loadTime otherwise.\n    const value = entry.startTime;\n\n    // If the page was hidden prior to paint time of the entry,\n    // ignore it and mark the metric as final, otherwise add the entry.\n    if (value < visibilityWatcher.firstHiddenTime) {\n      metric.value = value;\n      metric.entries.push(entry);\n    }\n\n    if (report) {\n      report();\n    }\n  };\n\n  const po = observe('largest-contentful-paint', entryHandler);\n\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        po.takeRecords().map(entryHandler as PerformanceEntryHandler);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n  }\n};\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Measurements, SpanContext } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, getGlobalObject, htmlTreeAsString, isNodeEnv, logger } from '@sentry/utils';\n\nimport { Span } from '../span';\nimport { Transaction } from '../transaction';\nimport { msToSec } from '../utils';\nimport { getCLS, LayoutShift } from './web-vitals/getCLS';\nimport { getFID } from './web-vitals/getFID';\nimport { getLCP, LargestContentfulPaint } from './web-vitals/getLCP';\nimport { getVisibilityWatcher } from './web-vitals/lib/getVisibilityWatcher';\nimport { NavigatorDeviceMemory, NavigatorNetworkInformation } from './web-vitals/types';\n\nconst global = getGlobalObject<Window>();\n\n/**\n * Exports a way to add options to our metric collection. Currently experimental.\n */\nexport interface MetricsInstrumentationOptions {\n  _reportAllChanges: boolean;\n}\n\nexport const DEFAULT_METRICS_INSTR_OPTIONS: MetricsInstrumentationOptions = {\n  _reportAllChanges: false,\n};\n\n/** Class tracking metrics  */\nexport class MetricsInstrumentation {\n  private _measurements: Measurements = {};\n\n  private _performanceCursor: number = 0;\n  private _lcpEntry: LargestContentfulPaint | undefined;\n  private _clsEntry: LayoutShift | undefined;\n\n  public constructor(_options: MetricsInstrumentationOptions) {\n    if (!isNodeEnv() && global?.performance && global?.document) {\n      if (global.performance.mark) {\n        global.performance.mark('sentry-tracing-init');\n      }\n\n      this._trackCLS();\n      this._trackLCP(_options._reportAllChanges);\n      this._trackFID();\n    }\n  }\n\n  /** Add performance related spans to a transaction */\n  public addPerformanceEntries(transaction: Transaction): void {\n    if (!global || !global.performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n      // Gatekeeper if performance API not available\n      return;\n    }\n\n    logger.log('[Tracing] Adding & adjusting spans using Performance API');\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n    let entryScriptSrc: string | undefined;\n\n    if (global.document && global.document.scripts) {\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let i = 0; i < global.document.scripts.length; i++) {\n        // We go through all scripts on the page and look for 'data-entry'\n        // We remember the name and measure the time between this script finished loading and\n        // our mark 'sentry-tracing-init'\n        if (global.document.scripts[i].dataset.entry === 'true') {\n          entryScriptSrc = global.document.scripts[i].src;\n          break;\n        }\n      }\n    }\n\n    let entryScriptStartTimestamp: number | undefined;\n    let tracingInitMarkStartTime: number | undefined;\n    let responseStartTimestamp: number | undefined;\n    let requestStartTimestamp: number | undefined;\n\n    global.performance\n      .getEntries()\n      .slice(this._performanceCursor)\n      .forEach((entry: Record<string, any>) => {\n        const startTime = msToSec(entry.startTime as number);\n        const duration = msToSec(entry.duration as number);\n\n        if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n          return;\n        }\n\n        switch (entry.entryType) {\n          case 'navigation': {\n            addNavigationSpans(transaction, entry, timeOrigin);\n            responseStartTimestamp = timeOrigin + msToSec(entry.responseStart as number);\n            requestStartTimestamp = timeOrigin + msToSec(entry.requestStart as number);\n            break;\n          }\n          case 'mark':\n          case 'paint':\n          case 'measure': {\n            const startTimestamp = addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n            if (tracingInitMarkStartTime === undefined && entry.name === 'sentry-tracing-init') {\n              tracingInitMarkStartTime = startTimestamp;\n            }\n\n            // capture web vitals\n\n            const firstHidden = getVisibilityWatcher();\n            // Only report if the page wasn't hidden prior to the web vital.\n            const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n            if (entry.name === 'first-paint' && shouldRecord) {\n              logger.log('[Measurements] Adding FP');\n              this._measurements['fp'] = { value: entry.startTime };\n              this._measurements['mark.fp'] = { value: startTimestamp };\n            }\n\n            if (entry.name === 'first-contentful-paint' && shouldRecord) {\n              logger.log('[Measurements] Adding FCP');\n              this._measurements['fcp'] = { value: entry.startTime };\n              this._measurements['mark.fcp'] = { value: startTimestamp };\n            }\n\n            break;\n          }\n          case 'resource': {\n            const resourceName = (entry.name as string).replace(global.location.origin, '');\n            const endTimestamp = addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n            // We remember the entry script end time to calculate the difference to the first init mark\n            if (entryScriptStartTimestamp === undefined && (entryScriptSrc || '').indexOf(resourceName) > -1) {\n              entryScriptStartTimestamp = endTimestamp;\n            }\n            break;\n          }\n          default:\n          // Ignore other entry types.\n        }\n      });\n\n    if (entryScriptStartTimestamp !== undefined && tracingInitMarkStartTime !== undefined) {\n      _startChild(transaction, {\n        description: 'evaluation',\n        endTimestamp: tracingInitMarkStartTime,\n        op: 'script',\n        startTimestamp: entryScriptStartTimestamp,\n      });\n    }\n\n    this._performanceCursor = Math.max(performance.getEntries().length - 1, 0);\n\n    this._trackNavigator(transaction);\n\n    // Measurements are only available for pageload transactions\n    if (transaction.op === 'pageload') {\n      // normalize applicable web vital values to be relative to transaction.startTimestamp\n\n      const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n      // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n      // start of the response in milliseconds\n      if (typeof responseStartTimestamp === 'number') {\n        logger.log('[Measurements] Adding TTFB');\n        this._measurements['ttfb'] = { value: (responseStartTimestamp - transaction.startTimestamp) * 1000 };\n\n        if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n          // Capture the time spent making the request and receiving the first byte of the response.\n          // This is the time between the start of the request and the start of the response in milliseconds.\n          this._measurements['ttfb.requestTime'] = { value: (responseStartTimestamp - requestStartTimestamp) * 1000 };\n        }\n      }\n\n      ['fcp', 'fp', 'lcp'].forEach(name => {\n        if (!this._measurements[name] || timeOrigin >= transaction.startTimestamp) {\n          return;\n        }\n\n        // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n        // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n        // to be adjusted to be relative to transaction.startTimestamp.\n\n        const oldValue = this._measurements[name].value;\n        const measurementTimestamp = timeOrigin + msToSec(oldValue);\n        // normalizedValue should be in milliseconds\n        const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n\n        const delta = normalizedValue - oldValue;\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n\n        this._measurements[name].value = normalizedValue;\n      });\n\n      if (this._measurements['mark.fid'] && this._measurements['fid']) {\n        // create span for FID\n\n        _startChild(transaction, {\n          description: 'first input delay',\n          endTimestamp: this._measurements['mark.fid'].value + msToSec(this._measurements['fid'].value),\n          op: 'web.vitals',\n          startTimestamp: this._measurements['mark.fid'].value,\n        });\n      }\n\n      // If FCP is not recorded we should not record the cls value\n      // according to the new definition of CLS.\n      if (!('fcp' in this._measurements)) {\n        delete this._measurements.cls;\n      }\n\n      transaction.setMeasurements(this._measurements);\n      this._tagMetricInfo(transaction);\n    }\n  }\n\n  /** Add LCP / CLS data to transaction to allow debugging */\n  private _tagMetricInfo(transaction: Transaction): void {\n    if (this._lcpEntry) {\n      logger.log('[Measurements] Adding LCP Data');\n      // Capture Properties of the LCP element that contributes to the LCP.\n\n      if (this._lcpEntry.element) {\n        transaction.setTag('lcp.element', htmlTreeAsString(this._lcpEntry.element));\n      }\n\n      if (this._lcpEntry.id) {\n        transaction.setTag('lcp.id', this._lcpEntry.id);\n      }\n\n      if (this._lcpEntry.url) {\n        // Trim URL to the first 200 characters.\n        transaction.setTag('lcp.url', this._lcpEntry.url.trim().slice(0, 200));\n      }\n\n      transaction.setTag('lcp.size', this._lcpEntry.size);\n    }\n\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n    if (this._clsEntry && this._clsEntry.sources) {\n      logger.log('[Measurements] Adding CLS Data');\n      this._clsEntry.sources.forEach((source, index) =>\n        transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n      );\n    }\n  }\n\n  /** Starts tracking the Cumulative Layout Shift on the current page. */\n  private _trackCLS(): void {\n    // See:\n    // https://web.dev/evolving-cls/\n    // https://web.dev/cls-web-tooling/\n    getCLS(metric => {\n      const entry = metric.entries.pop();\n      if (!entry) {\n        return;\n      }\n\n      logger.log('[Measurements] Adding CLS');\n      this._measurements['cls'] = { value: metric.value };\n      this._clsEntry = entry as LayoutShift;\n    });\n  }\n\n  /**\n   * Capture the information of the user agent.\n   */\n  private _trackNavigator(transaction: Transaction): void {\n    const navigator = global.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n    if (!navigator) {\n      return;\n    }\n\n    // track network connectivity\n    const connection = navigator.connection;\n    if (connection) {\n      if (connection.effectiveType) {\n        transaction.setTag('effectiveConnectionType', connection.effectiveType);\n      }\n\n      if (connection.type) {\n        transaction.setTag('connectionType', connection.type);\n      }\n\n      if (isMeasurementValue(connection.rtt)) {\n        this._measurements['connection.rtt'] = { value: connection.rtt as number };\n      }\n\n      if (isMeasurementValue(connection.downlink)) {\n        this._measurements['connection.downlink'] = { value: connection.downlink as number };\n      }\n    }\n\n    if (isMeasurementValue(navigator.deviceMemory)) {\n      transaction.setTag('deviceMemory', String(navigator.deviceMemory));\n    }\n\n    if (isMeasurementValue(navigator.hardwareConcurrency)) {\n      transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n    }\n  }\n\n  /** Starts tracking the Largest Contentful Paint on the current page. */\n  private _trackLCP(reportAllChanges: boolean): void {\n    getLCP(metric => {\n      const entry = metric.entries.pop();\n\n      if (!entry) {\n        return;\n      }\n\n      const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n      const startTime = msToSec(entry.startTime as number);\n      logger.log('[Measurements] Adding LCP');\n      this._measurements['lcp'] = { value: metric.value };\n      this._measurements['mark.lcp'] = { value: timeOrigin + startTime };\n      this._lcpEntry = entry as LargestContentfulPaint;\n    }, reportAllChanges);\n  }\n\n  /** Starts tracking the First Input Delay on the current page. */\n  private _trackFID(): void {\n    getFID(metric => {\n      const entry = metric.entries.pop();\n\n      if (!entry) {\n        return;\n      }\n\n      const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n      const startTime = msToSec(entry.startTime as number);\n      logger.log('[Measurements] Adding FID');\n      this._measurements['fid'] = { value: metric.value };\n      this._measurements['mark.fid'] = { value: timeOrigin + startTime };\n    });\n  }\n}\n\n/** Instrument navigation entries */\nfunction addNavigationSpans(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  addPerformanceNavigationTiming({ transaction, entry, event: 'unloadEvent', timeOrigin });\n  addPerformanceNavigationTiming({ transaction, entry, event: 'redirect', timeOrigin });\n  addPerformanceNavigationTiming({ transaction, entry, event: 'domContentLoadedEvent', timeOrigin });\n  addPerformanceNavigationTiming({ transaction, entry, event: 'loadEvent', timeOrigin });\n  addPerformanceNavigationTiming({ transaction, entry, event: 'connect', timeOrigin });\n  addPerformanceNavigationTiming({\n    transaction,\n    entry,\n    event: 'secureConnection',\n    timeOrigin,\n    eventEnd: 'connectEnd',\n    description: 'TLS/SSL',\n  });\n  addPerformanceNavigationTiming({\n    transaction,\n    entry,\n    event: 'fetch',\n    timeOrigin,\n    eventEnd: 'domainLookupStart',\n    description: 'cache',\n  });\n  addPerformanceNavigationTiming({ transaction, entry, event: 'domainLookup', timeOrigin, description: 'DNS' });\n  addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create measure related spans */\nfunction addMeasureSpans(\n  transaction: Transaction,\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name as string,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType as string,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n}\n\n/** Create resource-related spans */\nexport function addResourceSpans(\n  transaction: Transaction,\n  entry: ResourceEntry,\n  resourceName: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number | undefined {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return undefined;\n  }\n\n  const data: Record<string, any> = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource',\n    startTimestamp,\n    data,\n  });\n\n  return endTimestamp;\n}\n\n/** Create performance navigation related spans */\nfunction addPerformanceNavigationTiming(props: {\n  transaction: Transaction;\n  entry: Record<string, any>;\n  event: string;\n  timeOrigin: number;\n  eventEnd?: string;\n  description?: string;\n}): void {\n  const { transaction, entry, event, timeOrigin, eventEnd, description } = props;\n\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: description ?? event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\nfunction addRequest(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart as number),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart as number),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n  });\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nexport function _startChild(transaction: Transaction, { startTimestamp, ...ctx }: SpanContext): Span {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value: any): boolean {\n  return typeof value === 'number' && isFinite(value);\n}\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe, PerformanceEntryHandler } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { ReportHandler } from './types';\n\n// https://wicg.github.io/layout-instability/#sec-layout-shift\nexport interface LayoutShift extends PerformanceEntry {\n  value: number;\n  hadRecentInput: boolean;\n  sources: Array<LayoutShiftAttribution>;\n  toJSON(): Record<string, unknown>;\n}\n\nexport interface LayoutShiftAttribution {\n  node?: Node;\n  previousRect: DOMRectReadOnly;\n  currentRect: DOMRectReadOnly;\n}\n\nexport const getCLS = (onReport: ReportHandler, reportAllChanges?: boolean): void => {\n  const metric = initMetric('CLS', 0);\n  let report: ReturnType<typeof bindReporter>;\n\n  let sessionValue = 0;\n  let sessionEntries: PerformanceEntry[] = [];\n\n  const entryHandler = (entry: LayoutShift): void => {\n    // Only count layout shifts without recent user input.\n    // TODO: Figure out why entry can be undefined\n    if (entry && !entry.hadRecentInput) {\n      const firstSessionEntry = sessionEntries[0];\n      const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n      // If the entry occurred less than 1 second after the previous entry and\n      // less than 5 seconds after the first entry in the session, include the\n      // entry in the current session. Otherwise, start a new session.\n      if (\n        sessionValue &&\n        sessionEntries.length !== 0 &&\n        entry.startTime - lastSessionEntry.startTime < 1000 &&\n        entry.startTime - firstSessionEntry.startTime < 5000\n      ) {\n        sessionValue += entry.value;\n        sessionEntries.push(entry);\n      } else {\n        sessionValue = entry.value;\n        sessionEntries = [entry];\n      }\n\n      // If the current session value is larger than the current CLS value,\n      // update CLS and the entries contributing to it.\n      if (sessionValue > metric.value) {\n        metric.value = sessionValue;\n        metric.entries = sessionEntries;\n        if (report) {\n          report();\n        }\n      }\n    }\n  };\n\n  const po = observe('layout-shift', entryHandler as PerformanceEntryHandler);\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    onHidden(() => {\n      po.takeRecords().map(entryHandler as PerformanceEntryHandler);\n      report(true);\n    });\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe, PerformanceEntryHandler } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { PerformanceEventTiming, ReportHandler } from './types';\n\nexport const getFID = (onReport: ReportHandler, reportAllChanges?: boolean): void => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  let report: ReturnType<typeof bindReporter>;\n\n  const entryHandler = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const po = observe('first-input', entryHandler as PerformanceEntryHandler);\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n    onHidden(() => {\n      po.takeRecords().map(entryHandler as PerformanceEntryHandler);\n      po.disconnect();\n    }, true);\n  }\n};\n","import { addInstrumentationHandler, isInstanceOf, isMatchingPattern } from '@sentry/utils';\n\nimport { Span } from '../span';\nimport { SpanStatus } from '../spanstatus';\nimport { getActiveTransaction, hasTracingEnabled } from '../utils';\n\nexport const DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * List of strings / regex where the integration should create Spans out of. Additionally this will be used\n   * to define which outgoing requests the `sentry-trace` header will be attached to.\n   *\n   * Default: ['localhost', /^\\//] {@see DEFAULT_TRACING_ORIGINS}\n   */\n  tracingOrigins: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * By default it uses the `tracingOrigins` options as a url match.\n   */\n  shouldCreateSpanForRequest?(url: string): boolean;\n}\n\n/** Data returned from fetch callback */\nexport interface FetchData {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args: any[]; // the arguments passed to the fetch call itself\n  fetchData?: {\n    method: string;\n    url: string;\n    // span_id\n    __span?: string;\n  };\n\n  // TODO Should this be unknown instead? If we vendor types, make it a Response\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  response?: any;\n  error?: unknown;\n\n  startTimestamp: number;\n  endTimestamp?: number;\n}\n\n/** Data returned from XHR request */\nexport interface XHRData {\n  xhr?: {\n    __sentry_xhr__?: {\n      method: string;\n      url: string;\n      status_code: number;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      data: Record<string, any>;\n    };\n    __sentry_xhr_span_id__?: string;\n    setRequestHeader?: (key: string, val: string) => void;\n    __sentry_own_request__?: boolean;\n  };\n  startTimestamp: number;\n  endTimestamp?: number;\n}\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options?: Partial<RequestInstrumentationOptions>): void {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const { traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest } = {\n    ...defaultRequestInstrumentationOptions,\n    ..._options,\n  };\n\n  // We should cache url -> decision so that we don't have to compute\n  // regexp everytime we create a request.\n  const urlMap: Record<string, boolean> = {};\n\n  const defaultShouldCreateSpan = (url: string): boolean => {\n    if (urlMap[url]) {\n      return urlMap[url];\n    }\n    const origins = tracingOrigins;\n    urlMap[url] =\n      origins.some((origin: string | RegExp) => isMatchingPattern(url, origin)) &&\n      !isMatchingPattern(url, 'sentry_key');\n    return urlMap[url];\n  };\n\n  // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n  // That's why we filter out already unwanted Spans from tracingOrigins\n  let shouldCreateSpan = defaultShouldCreateSpan;\n  if (typeof shouldCreateSpanForRequest === 'function') {\n    shouldCreateSpan = (url: string) => {\n      return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n    };\n  }\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler({\n      callback: (handlerData: FetchData) => {\n        fetchCallback(handlerData, shouldCreateSpan, spans);\n      },\n      type: 'fetch',\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler({\n      callback: (handlerData: XHRData) => {\n        xhrCallback(handlerData, shouldCreateSpan, spans);\n      },\n      type: 'xhr',\n    });\n  }\n}\n\n/**\n * Create and track fetch request spans\n */\nexport function fetchCallback(\n  handlerData: FetchData,\n  shouldCreateSpan: (url: string) => boolean,\n  spans: Record<string, Span>,\n): void {\n  if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp && handlerData.fetchData.__span) {\n    const span = spans[handlerData.fetchData.__span];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus(SpanStatus.InternalError);\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[handlerData.fetchData.__span];\n    }\n    return;\n  }\n\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const span = activeTransaction.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    const request = (handlerData.args[0] = handlerData.args[0] as string | Request);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = (handlerData.args[1] = (handlerData.args[1] as { [key: string]: any }) || {});\n    let headers = options.headers;\n    if (isInstanceOf(request, Request)) {\n      headers = (request as Request).headers;\n    }\n    if (headers) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (typeof headers.append === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        headers.append('sentry-trace', span.toTraceparent());\n      } else if (Array.isArray(headers)) {\n        headers = [...headers, ['sentry-trace', span.toTraceparent()]];\n      } else {\n        headers = { ...headers, 'sentry-trace': span.toTraceparent() };\n      }\n    } else {\n      headers = { 'sentry-trace': span.toTraceparent() };\n    }\n    options.headers = headers;\n  }\n}\n\n/**\n * Create and track xhr request spans\n */\nexport function xhrCallback(\n  handlerData: XHRData,\n  shouldCreateSpan: (url: string) => boolean,\n  spans: Record<string, Span>,\n): void {\n  if (\n    !hasTracingEnabled() ||\n    handlerData.xhr?.__sentry_own_request__ ||\n    !(handlerData.xhr?.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  const xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && handlerData.xhr.__sentry_xhr_span_id__) {\n    const span = spans[handlerData.xhr.__sentry_xhr_span_id__];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[handlerData.xhr.__sentry_xhr_span_id__];\n    }\n    return;\n  }\n\n  // if not, create a new span to track it\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const span = activeTransaction.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n","import { Transaction, TransactionContext } from '@sentry/types';\nimport { addInstrumentationHandler, getGlobalObject, logger } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults<T extends Transaction>(\n  customStartTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  if (!global || !global.location) {\n    logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl: string | undefined = global.location.href;\n\n  let activeTransaction: T | undefined;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler({\n      callback: ({ to, from }: { to: string; from?: string }) => {\n        /**\n         * This early return is there to account for some cases where a navigation transaction starts right after\n         * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n         * create an uneccessary navigation transaction.\n         *\n         * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n         * only be caused in certain development environments where the usage of a hot module reloader is causing\n         * errors.\n         */\n        if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n          startingUrl = undefined;\n          return;\n        }\n\n        if (from !== to) {\n          startingUrl = undefined;\n          if (activeTransaction) {\n            logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n            // If there's an open transaction on the scope, we need to finish it before creating an new one.\n            activeTransaction.finish();\n          }\n          activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n        }\n      },\n      type: 'history',\n    });\n  }\n}\n","import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration, Transaction, TransactionContext } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { startIdleTransaction } from '../hubextensions';\nimport { DEFAULT_IDLE_TIMEOUT, IdleTransaction } from '../idletransaction';\nimport { SpanStatus } from '../spanstatus';\nimport { extractTraceparentData, secToMs } from '../utils';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { DEFAULT_METRICS_INSTR_OPTIONS, MetricsInstrumentation, MetricsInstrumentationOptions } from './metrics';\nimport {\n  defaultRequestInstrumentationOptions,\n  instrumentOutgoingRequests,\n  RequestInstrumentationOptions,\n} from './request';\nimport { instrumentRoutingWithDefaults } from './router';\n\nexport const DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions extends RequestInstrumentationOptions {\n  /**\n   * The time to wait in ms until the transaction will be finished. The transaction will use the end timestamp of\n   * the last finished span as the endtime for the transaction.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  idleTimeout: number;\n\n  /**\n   * Flag to enable/disable creation of `navigation` transaction on history changes.\n   *\n   * Default: true\n   */\n  startTransactionOnLocationChange: boolean;\n\n  /**\n   * Flag to enable/disable creation of `pageload` transaction on first pageload.\n   *\n   * Default: true\n   */\n  startTransactionOnPageLoad: boolean;\n\n  /**\n   * The maximum duration of a transaction before it will be marked as \"deadline_exceeded\".\n   * If you never want to mark a transaction set it to 0.\n   * Time is in seconds.\n   *\n   * Default: 600\n   */\n  maxTransactionDuration: number;\n\n  /**\n   * Flag Transactions where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundTransactions: boolean;\n\n  /**\n   * _metricOptions allows the user to send options to change how metrics are collected.\n   *\n   * _metricOptions is currently experimental.\n   *\n   * Default: undefined\n   */\n  _metricOptions?: Partial<MetricsInstrumentationOptions>;\n\n  /**\n   * beforeNavigate is called before a pageload/navigation transaction is created and allows users to modify transaction\n   * context data, or drop the transaction entirely (by setting `sampled = false` in the context).\n   *\n   * Note: For legacy reasons, transactions can also be dropped by returning `undefined`.\n   *\n   * @param context: The context data which will be passed to `startTransaction` by default\n   *\n   * @returns A (potentially) modified context object, with `sampled = false` if the transaction should be dropped.\n   */\n  beforeNavigate?(context: TransactionContext): TransactionContext | undefined;\n\n  /**\n   * Instrumentation that creates routing change transactions. By default creates\n   * pageload and navigation transactions.\n   */\n  routingInstrumentation<T extends Transaction>(\n    customStartTransaction: (context: TransactionContext) => T | undefined,\n    startTransactionOnPageLoad?: boolean,\n    startTransactionOnLocationChange?: boolean,\n  ): void;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  idleTimeout: DEFAULT_IDLE_TIMEOUT,\n  markBackgroundTransactions: true,\n  maxTransactionDuration: DEFAULT_MAX_TRANSACTION_DURATION_SECONDS,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nexport class BrowserTracing implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'BrowserTracing';\n\n  /** Browser Tracing integration options */\n  public options: BrowserTracingOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = BrowserTracing.id;\n\n  private _getCurrentHub?: () => Hub;\n\n  private readonly _metrics: MetricsInstrumentation;\n\n  private readonly _emitOptionsWarning: boolean = false;\n\n  public constructor(_options?: Partial<BrowserTracingOptions>) {\n    let tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n    // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n    if (\n      _options &&\n      _options.tracingOrigins &&\n      Array.isArray(_options.tracingOrigins) &&\n      _options.tracingOrigins.length !== 0\n    ) {\n      tracingOrigins = _options.tracingOrigins;\n    } else {\n      this._emitOptionsWarning = true;\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n      tracingOrigins,\n    };\n\n    this._metrics = new MetricsInstrumentation({ ...DEFAULT_METRICS_INSTR_OPTIONS, ...this.options._metricOptions });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this._getCurrentHub = getCurrentHub;\n\n    if (this._emitOptionsWarning) {\n      logger.warn(\n        '[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.',\n      );\n      logger.warn(\n        `[Tracing] We added a reasonable default for you: ${defaultRequestInstrumentationOptions.tracingOrigins}`,\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracingOrigins,\n      shouldCreateSpanForRequest,\n    } = this.options;\n\n    instrumentRouting(\n      (context: TransactionContext) => this._createRouteTransaction(context),\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    instrumentOutgoingRequests({ traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest });\n  }\n\n  /** Create routing idle transaction. */\n  private _createRouteTransaction(context: TransactionContext): Transaction | undefined {\n    if (!this._getCurrentHub) {\n      logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeNavigate, idleTimeout, maxTransactionDuration } = this.options;\n\n    const parentContextFromHeader = context.op === 'pageload' ? getHeaderContext() : undefined;\n\n    const expandedContext = {\n      ...context,\n      ...parentContextFromHeader,\n      trimEnd: true,\n    };\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    if (finalContext.sampled === false) {\n      logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const hub = this._getCurrentHub();\n    const { location } = getGlobalObject() as WindowOrWorkerGlobalScope & { location: Location };\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n    );\n    idleTransaction.registerBeforeFinishCallback((transaction, endTimestamp) => {\n      this._metrics.addPerformanceEntries(transaction);\n      adjustTransactionDuration(secToMs(maxTransactionDuration), transaction, endTimestamp);\n    });\n\n    return idleTransaction as Transaction;\n  }\n}\n\n/**\n * Gets transaction context from a sentry-trace meta.\n *\n * @returns Transaction context data from the header or undefined if there's no header or the header is malformed\n */\nexport function getHeaderContext(): Partial<TransactionContext> | undefined {\n  const header = getMetaContent('sentry-trace');\n  if (header) {\n    return extractTraceparentData(header);\n  }\n\n  return undefined;\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | null {\n  const el = getGlobalObject<Window>().document.querySelector(`meta[name=${metaName}]`);\n  return el ? el.getAttribute('content') : null;\n}\n\n/** Adjusts transaction value based on max transaction duration */\nfunction adjustTransactionDuration(maxDuration: number, transaction: IdleTransaction, endTimestamp: number): void {\n  const diff = endTimestamp - transaction.startTimestamp;\n  const isOutdatedTransaction = endTimestamp && (diff > maxDuration || diff < 0);\n  if (isOutdatedTransaction) {\n    transaction.setStatus(SpanStatus.DeadlineExceeded);\n    transaction.setTag('maxTransactionDurationExceeded', 'true');\n  }\n}\n","import { Integration, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\ntype Method =\n  | 'all'\n  | 'get'\n  | 'post'\n  | 'put'\n  | 'delete'\n  | 'patch'\n  | 'options'\n  | 'head'\n  | 'checkout'\n  | 'copy'\n  | 'lock'\n  | 'merge'\n  | 'mkactivity'\n  | 'mkcol'\n  | 'move'\n  | 'm-search'\n  | 'notify'\n  | 'purge'\n  | 'report'\n  | 'search'\n  | 'subscribe'\n  | 'trace'\n  | 'unlock'\n  | 'unsubscribe'\n  | 'use';\n\ntype Router = {\n  [method in Method]: (...args: any) => any; // eslint-disable-line @typescript-eslint/no-explicit-any\n};\n\ninterface ExpressResponse {\n  once(name: string, callback: () => void): void;\n}\n\n/**\n * Internal helper for `__sentry_transaction`\n * @hidden\n */\ninterface SentryTracingResponse {\n  __sentry_transaction?: Transaction;\n}\n\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nexport class Express implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Express';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Express.id;\n\n  /**\n   * Express App instance\n   */\n  private readonly _router?: Router;\n  private readonly _methods?: Method[];\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { app?: Router; router?: Router; methods?: Method[] } = {}) {\n    this._router = options.router || options.app;\n    this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    if (!this._router) {\n      logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n    instrumentMiddlewares(this._router, this._methods);\n  }\n}\n\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn: Function, method: Method): (...args: any[]) => void {\n  const arity = fn.length;\n\n  switch (arity) {\n    case 2: {\n      return function(this: NodeJS.Global, req: unknown, res: ExpressResponse & SentryTracingResponse): void {\n        const transaction = res.__sentry_transaction;\n        if (transaction) {\n          const span = transaction.startChild({\n            description: fn.name,\n            op: `middleware.${method}`,\n          });\n          res.once('finish', () => {\n            span.finish();\n          });\n        }\n        return fn.call(this, req, res);\n      };\n    }\n    case 3: {\n      return function(\n        this: NodeJS.Global,\n        req: unknown,\n        res: ExpressResponse & SentryTracingResponse,\n        next: () => void,\n      ): void {\n        const transaction = res.__sentry_transaction;\n        const span = transaction?.startChild({\n          description: fn.name,\n          op: `middleware.${method}`,\n        });\n        fn.call(this, req, res, function(this: NodeJS.Global, ...args: unknown[]): void {\n          span?.finish();\n          next.call(this, ...args);\n        });\n      };\n    }\n    case 4: {\n      return function(\n        this: NodeJS.Global,\n        err: Error,\n        req: Request,\n        res: Response & SentryTracingResponse,\n        next: () => void,\n      ): void {\n        const transaction = res.__sentry_transaction;\n        const span = transaction?.startChild({\n          description: fn.name,\n          op: `middleware.${method}`,\n        });\n        fn.call(this, err, req, res, function(this: NodeJS.Global, ...args: unknown[]): void {\n          span?.finish();\n          next.call(this, ...args);\n        });\n      };\n    }\n    default: {\n      throw new Error(`Express middleware takes 2-4 arguments. Got: ${arity}`);\n    }\n  }\n}\n\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args: unknown[], method: Method): unknown[] {\n  return args.map((arg: unknown) => {\n    if (typeof arg === 'function') {\n      return wrap(arg, method);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map((a: unknown) => {\n        if (typeof a === 'function') {\n          return wrap(a, method);\n        }\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router: Router, method: Method): Router {\n  const originalCallback = router[method];\n\n  router[method] = function(...args: unknown[]): void {\n    return originalCallback.call(this, ...wrapMiddlewareArgs(args, method));\n  };\n\n  return router;\n}\n\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router: Router, methods: Method[] = []): void {\n  methods.forEach((method: Method) => patchMiddleware(router, method));\n}\n","import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\ninterface PgClient {\n  prototype: {\n    query: () => void | Promise<unknown>;\n  };\n}\n\ninterface PgOptions {\n  usePgNative?: boolean;\n}\n\n/** Tracing integration for node-postgres package */\nexport class Postgres implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Postgres';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Postgres.id;\n\n  private _usePgNative: boolean;\n\n  public constructor(options: PgOptions = {}) {\n    this._usePgNative = !!options.usePgNative;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const pkg = loadModule<{ Client: PgClient; native: { Client: PgClient } }>('pg');\n\n    if (!pkg) {\n      logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    if (this._usePgNative && !pkg.native?.Client) {\n      logger.error(`Postgres Integration was unable to access 'pg-native' bindings.`);\n      return;\n    }\n\n    const { Client } = this._usePgNative ? pkg.native : pkg;\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(Client.prototype, 'query', function(orig: () => void | Promise<unknown>) {\n      return function(this: unknown, config: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof config === 'string' ? config : (config as { text: string }).text,\n          op: `db`,\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function(err: Error, result: unknown) {\n            span?.finish();\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function(err: Error, result: unknown) {\n            span?.finish();\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return (rv as Promise<unknown>).then((res: unknown) => {\n            span?.finish();\n            return res;\n          });\n        }\n\n        span?.finish();\n        return rv;\n      };\n    });\n  }\n}\n","import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration } from '@sentry/types';\nimport { fill, loadModule, logger } from '@sentry/utils';\n\ninterface MysqlConnection {\n  createQuery: () => void;\n}\n\n/** Tracing integration for node-mysql package */\nexport class Mysql implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Mysql';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Mysql.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const pkg = loadModule<MysqlConnection>('mysql/lib/Connection.js');\n\n    if (!pkg) {\n      logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function(orig: () => void) {\n      return function(this: unknown, options: unknown, values: unknown, callback: unknown) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n        const span = parentSpan?.startChild({\n          description: typeof options === 'string' ? options : (options as { sql: string }).sql,\n          op: `db`,\n        });\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function(err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function(err: Error, result: unknown, fields: unknown) {\n            span?.finish();\n            values(err, result, fields);\n          });\n        }\n\n        return orig.call(this, options, values, callback);\n      };\n    });\n  }\n}\n","import { Hub } from '@sentry/hub';\nimport { EventProcessor, Integration, SpanContext } from '@sentry/types';\nimport { fill, isThenable, loadModule, logger } from '@sentry/utils';\n\n// This allows us to use the same array for both defaults options and the type itself.\n// (note `as const` at the end to make it a union of string literal types (i.e. \"a\" | \"b\" | ... )\n// and not just a string[])\ntype Operation = typeof OPERATIONS[number];\nconst OPERATIONS = [\n  'aggregate', // aggregate(pipeline, options, callback)\n  'bulkWrite', // bulkWrite(operations, options, callback)\n  'countDocuments', // countDocuments(query, options, callback)\n  'createIndex', // createIndex(fieldOrSpec, options, callback)\n  'createIndexes', // createIndexes(indexSpecs, options, callback)\n  'deleteMany', // deleteMany(filter, options, callback)\n  'deleteOne', // deleteOne(filter, options, callback)\n  'distinct', // distinct(key, query, options, callback)\n  'drop', // drop(options, callback)\n  'dropIndex', // dropIndex(indexName, options, callback)\n  'dropIndexes', // dropIndexes(options, callback)\n  'estimatedDocumentCount', // estimatedDocumentCount(options, callback)\n  'find', // find(query, options, callback)\n  'findOne', // findOne(query, options, callback)\n  'findOneAndDelete', // findOneAndDelete(filter, options, callback)\n  'findOneAndReplace', // findOneAndReplace(filter, replacement, options, callback)\n  'findOneAndUpdate', // findOneAndUpdate(filter, update, options, callback)\n  'indexes', // indexes(options, callback)\n  'indexExists', // indexExists(indexes, options, callback)\n  'indexInformation', // indexInformation(options, callback)\n  'initializeOrderedBulkOp', // initializeOrderedBulkOp(options, callback)\n  'insertMany', // insertMany(docs, options, callback)\n  'insertOne', // insertOne(doc, options, callback)\n  'isCapped', // isCapped(options, callback)\n  'mapReduce', // mapReduce(map, reduce, options, callback)\n  'options', // options(options, callback)\n  'parallelCollectionScan', // parallelCollectionScan(options, callback)\n  'rename', // rename(newName, options, callback)\n  'replaceOne', // replaceOne(filter, doc, options, callback)\n  'stats', // stats(options, callback)\n  'updateMany', // updateMany(filter, update, options, callback)\n  'updateOne', // updateOne(filter, update, options, callback)\n] as const;\n\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nconst OPERATION_SIGNATURES: {\n  [op in Operation]?: string[];\n} = {\n  // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n  // see https://github.com/getsentry/sentry-javascript/pull/3102\n  bulkWrite: ['operations'],\n  countDocuments: ['query'],\n  createIndex: ['fieldOrSpec'],\n  createIndexes: ['indexSpecs'],\n  deleteMany: ['filter'],\n  deleteOne: ['filter'],\n  distinct: ['key', 'query'],\n  dropIndex: ['indexName'],\n  find: ['query'],\n  findOne: ['query'],\n  findOneAndDelete: ['filter'],\n  findOneAndReplace: ['filter', 'replacement'],\n  findOneAndUpdate: ['filter', 'update'],\n  indexExists: ['indexes'],\n  insertMany: ['docs'],\n  insertOne: ['doc'],\n  mapReduce: ['map', 'reduce'],\n  rename: ['newName'],\n  replaceOne: ['filter', 'doc'],\n  updateMany: ['filter', 'update'],\n  updateOne: ['filter', 'update'],\n};\n\ninterface MongoCollection {\n  collectionName: string;\n  dbName: string;\n  namespace: string;\n  prototype: {\n    [operation in Operation]: (...args: unknown[]) => unknown;\n  };\n}\n\ninterface MongoOptions {\n  operations?: Operation[];\n  describeOperations?: boolean | Operation[];\n  useMongoose?: boolean;\n}\n\n/** Tracing integration for mongo package */\nexport class Mongo implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Mongo';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Mongo.id;\n\n  private _operations: Operation[];\n  private _describeOperations?: boolean | Operation[];\n  private _useMongoose: boolean;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: MongoOptions = {}) {\n    this._operations = Array.isArray(options.operations)\n      ? options.operations\n      : ((OPERATIONS as unknown) as Operation[]);\n    this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n    this._useMongoose = !!options.useMongoose;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n    const pkg = loadModule<{ Collection: MongoCollection }>(moduleName);\n\n    if (!pkg) {\n      logger.error(`Mongo Integration was unable to require \\`${moduleName}\\` package.`);\n      return;\n    }\n\n    this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n  }\n\n  /**\n   * Patches original collection methods\n   */\n  private _instrumentOperations(collection: MongoCollection, operations: Operation[], getCurrentHub: () => Hub): void {\n    operations.forEach((operation: Operation) => this._patchOperation(collection, operation, getCurrentHub));\n  }\n\n  /**\n   * Patches original collection to utilize our tracing functionality\n   */\n  private _patchOperation(collection: MongoCollection, operation: Operation, getCurrentHub: () => Hub): void {\n    if (!(operation in collection.prototype)) return;\n\n    const getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n\n    fill(collection.prototype, operation, function(orig: () => void | Promise<unknown>) {\n      return function(this: unknown, ...args: unknown[]) {\n        const lastArg = args[args.length - 1];\n        const scope = getCurrentHub().getScope();\n        const parentSpan = scope?.getSpan();\n\n        // Check if the operation was passed a callback. (mapReduce requires a different check, as\n        // its (non-callback) arguments can also be functions.)\n        if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n          const span = parentSpan?.startChild(getSpanContext(this, operation, args));\n          const maybePromise = orig.call(this, ...args) as Promise<unknown>;\n\n          if (isThenable(maybePromise)) {\n            return maybePromise.then((res: unknown) => {\n              span?.finish();\n              return res;\n            });\n          } else {\n            span?.finish();\n            return maybePromise;\n          }\n        }\n\n        const span = parentSpan?.startChild(getSpanContext(this, operation, args.slice(0, -1)));\n        return orig.call(this, ...args.slice(0, -1), function(err: Error, result: unknown) {\n          span?.finish();\n          lastArg(err, result);\n        });\n      };\n    });\n  }\n\n  /**\n   * Form a SpanContext based on the user input to a given operation.\n   */\n  private _getSpanContextFromOperationArguments(\n    collection: MongoCollection,\n    operation: Operation,\n    args: unknown[],\n  ): SpanContext {\n    const data: { [key: string]: string } = {\n      collectionName: collection.collectionName,\n      dbName: collection.dbName,\n      namespace: collection.namespace,\n    };\n    const spanContext: SpanContext = {\n      op: `db`,\n      description: operation,\n      data,\n    };\n\n    // If the operation takes no arguments besides `options` and `callback`, or if argument\n    // collection is disabled for this operation, just return early.\n    const signature = OPERATION_SIGNATURES[operation];\n    const shouldDescribe = Array.isArray(this._describeOperations)\n      ? this._describeOperations.includes(operation)\n      : this._describeOperations;\n\n    if (!signature || !shouldDescribe) {\n      return spanContext;\n    }\n\n    try {\n      // Special case for `mapReduce`, as the only one accepting functions as arguments.\n      if (operation === 'mapReduce') {\n        const [map, reduce] = args as { name?: string }[];\n        data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n        data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n      } else {\n        for (let i = 0; i < signature.length; i++) {\n          data[signature[i]] = JSON.stringify(args[i]);\n        }\n      }\n    } catch (_oO) {\n      // no-empty\n    }\n\n    return spanContext;\n  }\n}\n","import { BrowserTracing } from './browser';\nimport { addExtensionMethods } from './hubextensions';\nimport * as TracingIntegrations from './integrations';\n\nconst Integrations = { ...TracingIntegrations, BrowserTracing };\n\nexport { Integrations };\nexport { Span } from './span';\nexport { Transaction } from './transaction';\nexport {\n  // TODO deprecate old name in v7\n  instrumentOutgoingRequests as registerRequestInstrumentation,\n  RequestInstrumentationOptions,\n  defaultRequestInstrumentationOptions,\n} from './browser';\nexport { SpanStatus } from './spanstatus';\nexport { IdleTransaction } from './idletransaction';\nexport { startIdleTransaction } from './hubextensions';\n\n// We are patching the global object with our hub extension methods\naddExtensionMethods();\n\nexport { addExtensionMethods };\n\nexport {\n  extractTraceparentData,\n  getActiveTransaction,\n  hasTracingEnabled,\n  stripUrlQueryAndFragment,\n  TRACEPARENT_REGEXP,\n} from './utils';\n","import { getCurrentHub } from '@sentry/hub';\nimport { Client, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\nexport type ClientClass<F extends Client, O extends Options> = new (options: O) => F;\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind<F extends Client, O extends Options>(clientClass: ClientClass<F, O>, options: O): void {\n  if (options.debug === true) {\n    logger.enable();\n  }\n  const hub = getCurrentHub();\n  hub.getScope()?.update(options.initialScope);\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n","import * as Sentry from \"@sentry/browser\";\nimport { Integrations } from \"@sentry/tracing\";\nSentry.init({\n    dsn: \"https://efa44b26de494d6ba87a04786b997e3c@sentry.zarinpal.com/22\",\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 1.0,\n});\n","import \"./index.css\";\nimport \"./sentry\";\nimport { KYC } from '../src/KYC';\nvar sessionBtn = document.getElementById(\"session-btn\");\nvar sessionInput = document.getElementById(\"session-key\");\nvar sessionEnvRadio = document.querySelectorAll('input[name=\"env\"]');\nvar hash = (new URL(document.URL)).hash;\nif (hash) {\n    sessionInput.value = hash.substring(1);\n}\nvar modal = document.getElementById(\"kyc-modal\");\nsessionBtn.onclick = function () {\n    var selectedValue;\n    for (var i in sessionEnvRadio) {\n        if (sessionEnvRadio[i].checked) {\n            selectedValue = sessionEnvRadio[i].value;\n            break;\n        }\n    }\n    var sessionKey = sessionInput.value;\n    var container = document.getElementById(\"kyc-container\");\n    var kyc = new KYC(sessionKey, container, selectedValue);\n    modal.style.display = \"block\";\n    window.onclick = function (event) {\n        if (event.target == modal) {\n            modal.style.display = \"none\";\n            kyc.cleanup();\n        }\n    };\n    kyc.eventManager.addListener('error', function (e) {\n        alert(e.errorCode + \" => \" + e.errorMessage);\n    });\n    kyc.eventManager.addListener('next_job', function (e) {\n        var textBox = document.getElementById(\"text-box\");\n        switch (e.job) {\n            case \"face_agreement\":\n            case \"face_text\":\n                textBox.innerText = e.job + \" => plz say \\\"\" + e.whatToSay + \"\\\"\";\n                return;\n            case \"id_card\":\n                textBox.innerText = e.job + \" => hold your id card in front of camera\";\n                return;\n        }\n    });\n    kyc.eventManager.addListener('capture_progress', function (e) {\n        var x = document.getElementById(\"capture-progress\");\n        x.value = e.progress;\n    });\n    kyc.eventManager.addListener('jobs', function (e) {\n        var x = document.getElementById(\"jobs-list\");\n        while (x.lastElementChild)\n            x.removeChild(x.lastElementChild);\n        e.jobs.forEach(function (item) {\n            var liEl = document.createElement('li');\n            if (item.verified)\n                liEl.classList.add(\"verified\");\n            liEl.innerText = item.id + \". \" + item.action + \":\" + item.verified;\n            x.appendChild(liEl);\n        });\n    });\n    kyc.eventManager.addListener('loading', function (e) {\n        var container = document.getElementById(\"container\");\n        if (!e.isLoaded) {\n            container.classList.add('loading');\n            return;\n        }\n        container.classList.remove('loading');\n    });\n    kyc.eventManager.addListener('finish', function (e) {\n        alert('finish');\n        kyc.cleanup();\n    });\n};\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","context","errors","sid","duration","status","init","ignoreDuration","startingTime","time","this","timestamp","started","update","user","ipAddress","ip_address","did","email","username","length","undefined","release","environment","userAgent","close","toJSON","Date","toISOString","attrs","user_agent","client","scope","_version","_stack","getStackTop","bindClient","isOlderThan","version","setupIntegrations","pushScope","getScope","getStack","getClient","popScope","pop","withScope","callback","captureException","exception","hint","eventId","_lastEventId","finalHint","syntheticException","Error","originalException","_invokeClient","event_id","captureMessage","message","level","captureEvent","event","type","lastEventId","addBreadcrumb","breadcrumb","beforeBreadcrumb","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","setUser","setTags","tags","setExtras","extras","setTag","key","value","setExtra","extra","setContext","name","configureScope","run","oldHub","makeMain","getIntegration","integration","_oO","startSpan","_callExtensionMethod","startTransaction","customSamplingContext","traceHeaders","captureSession","endSession","_sendSessionUpdate","getSession","setSession","startSession","session","Session","getUser","currentSession","method","args","carrier","getMainCarrier","sentry","__SENTRY__","extensions","apply","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","Hub","activeDomain","domain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","clone","newScope","Scope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setFingerprint","fingerprint","setLevel","setTransactionName","setTransaction","setSpan","span","getSpan","getTransaction","transaction","spanRecorder","spans","captureContext","updatedScope","Object","keys","contexts","clear","maxCrumbs","Math","min","slice","clearBreadcrumbs","applyToEvent","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","_notifyEventProcessors","getGlobalEventProcessors","processors","index","resolve","reject","processor","result","then","final","forEach","Array","isArray","concat","global","globalEventProcessors","addGlobalEventProcessor","TransactionSamplingMethod","errorCallback","activeTransaction","logger","log","setStatus","toTraceparent","sample","options","samplingContext","sampled","setMetadata","transactionSampling","Explicit","tracesSampler","sampleRate","Sampler","rate","Number","parentSampled","Inheritance","tracesSampleRate","Rate","isNaN","JSON","stringify","random","op","_startTransaction","transactionContext","getOptions","initSpanRecorder","_experiments","maxSpans","startIdleTransaction","idleTimeout","onScope","addExtensionMethods","packageToIntegrationMapping","mongodb","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","filter","moduleName","map","pkg","e","p","integrations","_autoloadDatabaseIntegrations","DEFAULT_IDLE_TIMEOUT","_pushActivity","_popActivity","transactionSpanId","maxlen","add","spanId","finish","endTimestamp","_idleHub","_idleTimeout","_onScope","activities","_heartbeatCounter","_finished","_beforeFinishCallbacks","clearActiveTransaction","_initTimeout","setTimeout","keepSpan","startTimestamp","registerBeforeFinishCallback","IdleTransactionSpanRecorder","_pingHeartbeat","clearTimeout","timeout","_beat","heartbeatString","join","_prevHeartbeatString","_maxlen","spanContext","traceId","substring","data","parentSpanId","description","child","startChild","childSpan","Span","setData","setHttpStatus","httpStatus","String","spanStatus","isSuccess","sampledString","toContext","updateWithContext","parent_span_id","span_id","trace_id","start_timestamp","SpanStatus","fromHttpCode","Ok","Unauthenticated","PermissionDenied","NotFound","AlreadyExists","FailedPrecondition","ResourceExhausted","InvalidArgument","Unimplemented","Unavailable","DeadlineExceeded","InternalError","UnknownError","_measurements","_hub","metadata","_trimEnd","trimEnd","setName","setMeasurements","measurements","newMetadata","getTransport","recordLostEvent","finishedSpans","s","reduce","prev","current","debug_meta","TRACEPARENT_REGEXP","RegExp","hasTracingEnabled","extractTraceparentData","traceparent","matches","match","getActiveTransaction","msToSec","secToMs","SessionStatus","RequestSessionStatus","Outcome","htmlTreeAsString","elem","keyAttrs","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","reverse","el","className","classes","attr","i","tagName","toLowerCase","keyAttrPairs","keyAttr","getAttribute","keyAttrPair","split","allowedAttrs","lastHref","debounceTimerID","lastCapturedEvent","handlers","instrumented","addInstrumentationHandler","handler","console","originalConsoleLevel","triggerHandlers","Function","prototype","call","triggerDOMHandler","bind","globalDOMEventHandler","makeDOMEventHandler","document","addEventListener","target","proto","hasOwnProperty","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","instrumentDOM","requestKeys","requestValues","xhrproto","XMLHttpRequest","originalOpen","xhr","url","__sentry_xhr__","toUpperCase","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","requestPos","indexOf","splice","body","now","onreadystatechange","original","readyStateArgs","originalSend","instrumentXHR","originalFetch","handlerData","fetchData","getFetchMethod","getFetchUrl","response","error","oldOnPopState","onpopstate","to","location","href","from","history","historyReplacementFunction","originalHistoryFunction","instrumentHistory","_oldOnErrorHandler","onerror","msg","line","column","arguments","_oldOnUnhandledRejectionHandler","onunhandledrejection","instrument","fetchArgs","Request","globalListener","isContentEditable","shouldSkipDOMEvent","previous","shouldShortcircuitPreviousDebounce","isError","wat","toString","isInstanceOf","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","Boolean","isSyntheticEvent","base","_e","PREFIX","_enabled","disable","enable","warn","Logger","fallbackGlobalObject","getGlobalObject","g","window","self","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","r","parseUrl","query","fragment","host","path","protocol","relative","getEventDescription","values","consoleSandbox","originalConsole","wrappedLevels","__sentry_original__","addExceptionTypeValue","addExceptionMechanism","mechanism","getLocationHref","oO","parseRetryAfterHeader","header","headerDelay","parseInt","headerDate","parse","isNodeEnv","process","dynamicRequire","mod","request","require","loadModule","cwd","_hasWeakSet","WeakSet","_inner","memoize","obj","has","unmemoize","delete","fill","source","replacementFactory","wrapped","defineProperties","enumerable","urlEncode","object","encodeURIComponent","getWalkSource","is","err","stack","currentTarget","CustomEvent","detail","normalizeToSize","depth","maxSize","serialized","normalize","encodeURI","utf8Length","normalizeValue","_events","walk","memo","Memo","normalized","serializeValue","acc","innerKey","input","extractExceptionKeysForMessage","maxLength","sort","includedKeys","dropUndefinedKeys","val","rv","defaultFunctionName","getFunctionName","fn","truncate","str","max","substr","safeJoin","delimiter","output","isMatchingPattern","pattern","test","supportsFetch","Headers","Response","isNativeFetch","func","supportsNativeFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsReferrerPolicy","referrerPolicy","supportsHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","States","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","_value","_executeHandlers","_attachHandler","cachedHandlers","done","onfulfilled","onrejected","SyncPromise","_","all","collection","counter","resolvedCollection","item","TypeError","catch","finally","onfinally","isRejected","dateTimestampSource","nowSeconds","platformPerformance","performance","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","timestampWithMs","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","exports","cssWithMappingToString","list","content","needLayer","modules","media","dedupe","supports","layer","alreadyImportedModules","_i","_i2","cssMapping","btoa","base64","unescape","sourceMapping","sourceURLs","sources","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","count","indexByIdentifier","css","sourceMap","references","updater","addElementStyle","byIndex","api","domAPI","newObj","remove","lastIdentifiers","newList","newLastIdentifiers","_index","insert","style","styleTarget","querySelector","HTMLIFrameElement","contentDocument","getTarget","element","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","extendStatics","d","b","setPrototypeOf","__proto__","__extends","__","constructor","create","__assign","assign","t","n","__rest","getOwnPropertySymbols","propertyIsEnumerable","__values","o","Symbol","iterator","m","next","__read","ar","__spread","originalFunctionToString","DEFAULT_IGNORE_ERRORS","_options","InboundFilters","setupOnce","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","denyUrls","allowUrls","whitelistUrls","blacklistUrls","_getLastValidUrl","frames","frame","filename","stacktrace","FunctionToString","SDK_VERSION","prop","DSN_REGEX","_fromString","_fromComponents","_validate","withPassword","pass","port","projectId","publicKey","exec","SentryError","projectMatch","components","component","ERROR_MESSAGE","installedIntegrations","filterDuplicates","every","accIntegration","Status","backendClass","_integrations","_numProcessing","_backend","dsn","_dsn","Dsn","_process","_getBackend","eventFromException","_captureEvent","promisedEvent","eventFromMessage","_isEnabled","_sendSession","getDsn","flush","_isClientDoneProcessing","clientFinished","transportFlushed","enabled","initialized","defaultIntegrations","userIntegrations","userIntegration","integrationsNames","alwaysLastToRun","getIntegrationsToSetup","setupIntegration","defineProperty","_updateSessionFromEvent","crashed","errored","exceptions","handled","sessionNonTerminal","sendSession","ticked","interval","setInterval","clearInterval","_prepareEvent","normalizeDepth","prepared","_applyClientOptions","_applyIntegrationsMetadata","finalScope","evt","_normalizeEvent","ensureNoCircularStructures","dist","maxValueLength","integrationsArray","sdk","_sendEvent","sendEvent","_processEvent","finalEvent","beforeSend","transport","isTransaction","__sentry__","beforeSendResult","_ensureBeforeSendRv","processedEvent","promise","nullErr","code","Success","RateLimit","Invalid","Failed","Unknown","Severity","Skipped","_transport","_setupTransport","_exception","_hint","_message","NoopTransport","fromString","Debug","Info","Warning","Fatal","Critical","Log","UNKNOWN_FUNCTION","gecko","winjs","geckoEval","chromeEval","reactMinifiedRegexp","computeStackTrace","ex","popSize","framesToPop","parts","opera10Regex","opera11Regex","lines","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","extractSafariExtensionDetails","isSafariExtension","isSafariWebExtension","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","colno","function","in_app","lineno","eventFromUnknownInput","domException","eventFromString","rejection","__serialized__","eventFromPlainObject","synthetic","attachStacktrace","getSdkMetadataForEnvelopeHeader","enhanceEventWithSdkInfo","sdkInfo","packages","sessionToSentryRequest","sent_at","forceEnvelope","getEnvelopeEndpointWithUrlEncodedAuth","eventToSentryRequest","eventType","useEnvelope","req","getStoreEndpointWithUrlEncodedAuth","envelope","sample_rates","samplingMethod","tunnel","_dsnObject","_tunnel","getBaseApiEndpoint","getStoreEndpoint","_getIngestEndpoint","_encodedAuth","_getEnvelopeEndpoint","getStoreEndpointPath","getRequestHeaders","clientName","clientVersion","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","auth","sentry_key","sentry_version","_limit","_buffer","isReady","taskProducer","task","drain","capturedSetTimeout","CATEGORY_MAPPING","attachment","PromiseBuffer","_rateLimits","_outcomes","_api","API","_metadata","sendClientReports","visibilityState","_flushOutcomes","category","navigator","sendBeacon","outcomes","discarded_events","quantity","_handleResponse","requestType","headers","_handleRateLimit","_disabledUntil","_isRateLimited","rlHeader","raHeader","trim","parameters","delay","fetchImpl","getNativeFetchImplementation","_fetch","_sendRequest","sentryRequest","originalPayload","Promise","fetchParameters","get","BaseTransport","getResponseHeader","open","setRequestHeader","send","transportOptions","FetchTransport","XHRTransport","BaseBackend","callOnHub","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","property","getOwnPropertyDescriptor","configurable","Breadcrumbs","dom","addSentryBreadcrumb","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","serializeAttribute","parsedLoc","parsedFrom","parsedTo","BrowserBackend","showReportDialog","script","async","src","onLoad","onload","injectionPoint","injectReportDialog","platform","BaseClient","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","_wrapEventTarget","originalCallback","eventName","wrappedEventHandler","originalEventHandler","xmlHttpRequestProps","wrapOptions","GlobalHandlers","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromRejectionWithPrimitive","groups","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","Dedupe","currentEvent","_previousEvent","previousEvent","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_getFramesFromEvent","currentFrames","previousFrames","frameA","frameB","_getExceptionFromEvent","previousException","currentException","currentFingerprint","previousFingerprint","UserAgent","referrer","Referer","bindReporter","metric","reportAllChanges","prevValue","forceReport","delta","initMetric","entries","floor","observe","PerformanceObserver","supportedEntryTypes","includes","po","l","getEntries","buffered","onHidden","cb","once","onHiddenOrPageHide","removeEventListener","firstHiddenTime","getVisibilityWatcher","Infinity","timeStamp","reportedMetricIDs","DEFAULT_METRICS_INSTR_OPTIONS","_reportAllChanges","_performanceCursor","mark","_trackCLS","_trackLCP","_trackFID","addPerformanceEntries","entryScriptSrc","entryScriptStartTimestamp","tracingInitMarkStartTime","responseStartTimestamp","requestStartTimestamp","scripts","dataset","entry","startTime","entryType","addPerformanceNavigationTiming","eventEnd","_startChild","requestStart","responseEnd","responseStart","addRequest","addNavigationSpans","measureStartTimestamp","measureEndTimestamp","addMeasureSpans","firstHidden","shouldRecord","resourceName","origin","initiatorType","transferSize","encodedBodySize","decodedBodySize","addResourceSpans","_trackNavigator","oldValue","measurementTimestamp","normalizedValue","cls","_tagMetricInfo","_lcpEntry","size","_clsEntry","node","onReport","report","sessionValue","sessionEntries","entryHandler","hadRecentInput","firstSessionEntry","lastSessionEntry","takeRecords","connection","effectiveType","isMeasurementValue","rtt","downlink","deviceMemory","hardwareConcurrency","visibilityWatcher","disconnect","capture","getLCP","processingStart","props","end","start","ctx","isFinite","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","maxTransactionDuration","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","BrowserTracing","_emitOptionsWarning","_metrics","MetricsInstrumentation","_metricOptions","_getCurrentHub","shouldCreateSpanForRequest","instrumentRouting","_createRouteTransaction","urlMap","defaultShouldCreateSpan","origins","shouldCreateSpan","__span","append","fetchCallback","__sentry_xhr_span_id__","xhrCallback","instrumentOutgoingRequests","beforeNavigate","parentContextFromHeader","getHeaderContext","expandedContext","modifiedContext","finalContext","idleTransaction","maxDuration","diff","adjustTransactionDuration","Express","_router","router","_methods","methods","wrapMiddlewareArgs","patchMiddleware","arity","res","__sentry_transaction","a","_usePgNative","usePgNative","native","Client","orig","config","text","sql","fields","OPERATIONS","OPERATION_SIGNATURES","bulkWrite","countDocuments","createIndex","createIndexes","deleteMany","deleteOne","distinct","dropIndex","find","findOne","findOneAndDelete","findOneAndReplace","findOneAndUpdate","indexExists","insertMany","insertOne","mapReduce","rename","replaceOne","updateMany","updateOne","_operations","operations","_describeOperations","describeOperations","_useMongoose","useMongoose","_instrumentOperations","Collection","operation","_patchOperation","getSpanContext","_getSpanContextFromOperationArguments","lastArg","parentSpan","maybePromise","collectionName","dbName","namespace","signature","shouldDescribe","Integrations","SENTRY_RELEASE","autoSessionTracking","clientClass","debug","initialScope","initAndBind","BrowserClient","startSessionTracking","sessionBtn","getElementById","sessionInput","sessionEnvRadio","querySelectorAll","hash","URL","modal","onclick","selectedValue","checked","sessionKey","container","kyc","KYC","display","cleanup","eventManager","addListener","alert","errorCode","errorMessage","textBox","job","innerText","whatToSay","progress","x","lastElementChild","jobs","liEl","verified","classList","action","isLoaded"],"sourceRoot":""}